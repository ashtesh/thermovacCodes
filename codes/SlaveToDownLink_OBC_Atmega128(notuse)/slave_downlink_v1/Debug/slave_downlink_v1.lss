
slave_downlink_v1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000dba  00000e4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002a  0080011e  0080011e  00000e6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e6c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000198  00000000  00000000  00000e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000015a7  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000060e  00000000  00000000  000025db  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001176  00000000  00000000  00002be9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004a8  00000000  00000000  00003d60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007f0  00000000  00000000  00004208  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000019b8  00000000  00000000  000049f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001c8  00000000  00000000  000063b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	6c c4       	rjmp	.+2264   	; 0x91e <__vector_17>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea eb       	ldi	r30, 0xBA	; 186
  a0:	fd e0       	ldi	r31, 0x0D	; 13
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 31       	cpi	r26, 0x1E	; 30
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e1       	ldi	r26, 0x1E	; 30
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a8 34       	cpi	r26, 0x48	; 72
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1b d5       	rcall	.+2614   	; 0xafa <main>
  c4:	78 c6       	rjmp	.+3312   	; 0xdb6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <_Z14init_SPI_slavev>:
}

void error(void)
{

  exit(0);
  c8:	87 b3       	in	r24, 0x17	; 23
  ca:	80 7f       	andi	r24, 0xF0	; 240
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	bb 9a       	sbi	0x17, 3	; 23
  d0:	8c ec       	ldi	r24, 0xCC	; 204
  d2:	8d b9       	out	0x0d, r24	; 13
  d4:	08 95       	ret

000000d6 <_Z5crc16Phh>:
  d6:	7f ef       	ldi	r23, 0xFF	; 255
  d8:	76 0f       	add	r23, r22
  da:	66 23       	and	r22, r22
  dc:	19 f1       	breq	.+70     	; 0x124 <_Z5crc16Phh+0x4e>
  de:	e8 2f       	mov	r30, r24
  e0:	f9 2f       	mov	r31, r25
  e2:	8f ef       	ldi	r24, 0xFF	; 255
  e4:	9f ef       	ldi	r25, 0xFF	; 255
  e6:	21 91       	ld	r18, Z+
  e8:	29 27       	eor	r18, r25
  ea:	32 2f       	mov	r19, r18
  ec:	32 95       	swap	r19
  ee:	3f 70       	andi	r19, 0x0F	; 15
  f0:	23 27       	eor	r18, r19
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	98 2f       	mov	r25, r24
  f6:	88 27       	eor	r24, r24
  f8:	82 27       	eor	r24, r18
  fa:	93 27       	eor	r25, r19
  fc:	a9 01       	movw	r20, r18
  fe:	54 2f       	mov	r21, r20
 100:	44 27       	eor	r20, r20
 102:	52 95       	swap	r21
 104:	50 7f       	andi	r21, 0xF0	; 240
 106:	84 27       	eor	r24, r20
 108:	95 27       	eor	r25, r21
 10a:	22 0f       	add	r18, r18
 10c:	33 1f       	adc	r19, r19
 10e:	22 95       	swap	r18
 110:	32 95       	swap	r19
 112:	30 7f       	andi	r19, 0xF0	; 240
 114:	32 27       	eor	r19, r18
 116:	20 7f       	andi	r18, 0xF0	; 240
 118:	32 27       	eor	r19, r18
 11a:	82 27       	eor	r24, r18
 11c:	93 27       	eor	r25, r19
 11e:	71 50       	subi	r23, 0x01	; 1
 120:	10 f7       	brcc	.-60     	; 0xe6 <_Z5crc16Phh+0x10>
 122:	08 95       	ret
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	9f ef       	ldi	r25, 0xFF	; 255
 128:	08 95       	ret

0000012a <_Z25make_ax25_frame_from_dataPhS_>:
 12a:	cf 92       	push	r12
 12c:	df 92       	push	r13
 12e:	ef 92       	push	r14
 130:	ff 92       	push	r15
 132:	0f 93       	push	r16
 134:	1f 93       	push	r17
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62
 13e:	c0 55       	subi	r28, 0x50	; 80
 140:	d1 09       	sbc	r29, r1
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	f8 94       	cli
 146:	de bf       	out	0x3e, r29	; 62
 148:	0f be       	out	0x3f, r0	; 63
 14a:	cd bf       	out	0x3d, r28	; 61
 14c:	7c 01       	movw	r14, r24
 14e:	8e e7       	ldi	r24, 0x7E	; 126
 150:	f7 01       	movw	r30, r14
 152:	81 93       	st	Z+, r24
 154:	6f 01       	movw	r12, r30
 156:	86 e0       	ldi	r24, 0x06	; 6
 158:	e9 e0       	ldi	r30, 0x09	; 9
 15a:	f1 e0       	ldi	r31, 0x01	; 1
 15c:	9e 01       	movw	r18, r28
 15e:	2f 5f       	subi	r18, 0xFF	; 255
 160:	3f 4f       	sbci	r19, 0xFF	; 255
 162:	d9 01       	movw	r26, r18
 164:	01 90       	ld	r0, Z+
 166:	0d 92       	st	X+, r0
 168:	8a 95       	dec	r24
 16a:	e1 f7       	brne	.-8      	; 0x164 <_Z25make_ax25_frame_from_dataPhS_+0x3a>
 16c:	52 2f       	mov	r21, r18
 16e:	43 2f       	mov	r20, r19
 170:	f6 01       	movw	r30, r12
 172:	ce 01       	movw	r24, r28
 174:	07 96       	adiw	r24, 0x07	; 7
 176:	d9 01       	movw	r26, r18
 178:	2d 91       	ld	r18, X+
 17a:	21 93       	st	Z+, r18
 17c:	a8 17       	cp	r26, r24
 17e:	b9 07       	cpc	r27, r25
 180:	d9 f7       	brne	.-10     	; 0x178 <_Z25make_ax25_frame_from_dataPhS_+0x4e>
 182:	20 e6       	ldi	r18, 0x60	; 96
 184:	f7 01       	movw	r30, r14
 186:	27 83       	std	Z+7, r18	; 0x07
 188:	26 e0       	ldi	r18, 0x06	; 6
 18a:	e0 e1       	ldi	r30, 0x10	; 16
 18c:	f1 e0       	ldi	r31, 0x01	; 1
 18e:	de 01       	movw	r26, r28
 190:	11 96       	adiw	r26, 0x01	; 1
 192:	01 90       	ld	r0, Z+
 194:	0d 92       	st	X+, r0
 196:	2a 95       	dec	r18
 198:	e1 f7       	brne	.-8      	; 0x192 <_Z25make_ax25_frame_from_dataPhS_+0x68>
 19a:	d7 01       	movw	r26, r14
 19c:	18 96       	adiw	r26, 0x08	; 8
 19e:	e5 2f       	mov	r30, r21
 1a0:	f4 2f       	mov	r31, r20
 1a2:	21 91       	ld	r18, Z+
 1a4:	2d 93       	st	X+, r18
 1a6:	e8 17       	cp	r30, r24
 1a8:	f9 07       	cpc	r31, r25
 1aa:	d9 f7       	brne	.-10     	; 0x1a2 <_Z25make_ax25_frame_from_dataPhS_+0x78>
 1ac:	28 e6       	ldi	r18, 0x68	; 104
 1ae:	f7 01       	movw	r30, r14
 1b0:	26 87       	std	Z+14, r18	; 0x0e
 1b2:	26 e0       	ldi	r18, 0x06	; 6
 1b4:	e7 e1       	ldi	r30, 0x17	; 23
 1b6:	f1 e0       	ldi	r31, 0x01	; 1
 1b8:	de 01       	movw	r26, r28
 1ba:	11 96       	adiw	r26, 0x01	; 1
 1bc:	01 90       	ld	r0, Z+
 1be:	0d 92       	st	X+, r0
 1c0:	2a 95       	dec	r18
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <_Z25make_ax25_frame_from_dataPhS_+0x92>
 1c4:	d7 01       	movw	r26, r14
 1c6:	1f 96       	adiw	r26, 0x0f	; 15
 1c8:	e5 2f       	mov	r30, r21
 1ca:	f4 2f       	mov	r31, r20
 1cc:	21 91       	ld	r18, Z+
 1ce:	2d 93       	st	X+, r18
 1d0:	e8 17       	cp	r30, r24
 1d2:	f9 07       	cpc	r31, r25
 1d4:	d9 f7       	brne	.-10     	; 0x1cc <_Z25make_ax25_frame_from_dataPhS_+0xa2>
 1d6:	81 e6       	ldi	r24, 0x61	; 97
 1d8:	f7 01       	movw	r30, r14
 1da:	85 8b       	std	Z+21, r24	; 0x15
 1dc:	83 e0       	ldi	r24, 0x03	; 3
 1de:	86 8b       	std	Z+22, r24	; 0x16
 1e0:	80 ef       	ldi	r24, 0xF0	; 240
 1e2:	87 8b       	std	Z+23, r24	; 0x17
 1e4:	40 91 07 01 	lds	r20, 0x0107
 1e8:	50 91 08 01 	lds	r21, 0x0108
 1ec:	ce 01       	movw	r24, r28
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	d9 d5       	rcall	.+2994   	; 0xda4 <memcpy>
 1f2:	00 91 07 01 	lds	r16, 0x0107
 1f6:	10 91 08 01 	lds	r17, 0x0108
 1fa:	10 16       	cp	r1, r16
 1fc:	11 06       	cpc	r1, r17
 1fe:	c4 f4       	brge	.+48     	; 0x230 <_Z25make_ax25_frame_from_dataPhS_+0x106>
 200:	20 e0       	ldi	r18, 0x00	; 0
 202:	30 e0       	ldi	r19, 0x00	; 0
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	f7 01       	movw	r30, r14
 208:	e2 0f       	add	r30, r18
 20a:	f3 1f       	adc	r31, r19
 20c:	a1 e0       	ldi	r26, 0x01	; 1
 20e:	b0 e0       	ldi	r27, 0x00	; 0
 210:	ac 0f       	add	r26, r28
 212:	bd 1f       	adc	r27, r29
 214:	a2 0f       	add	r26, r18
 216:	b3 1f       	adc	r27, r19
 218:	9c 91       	ld	r25, X
 21a:	90 8f       	std	Z+24, r25	; 0x18
 21c:	8f 5f       	subi	r24, 0xFF	; 255
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	00 91 07 01 	lds	r16, 0x0107
 226:	10 91 08 01 	lds	r17, 0x0108
 22a:	20 17       	cp	r18, r16
 22c:	31 07       	cpc	r19, r17
 22e:	5c f3       	brlt	.-42     	; 0x206 <_Z25make_ax25_frame_from_dataPhS_+0xdc>
 230:	18 e1       	ldi	r17, 0x18	; 24
 232:	10 0f       	add	r17, r16
 234:	67 e1       	ldi	r22, 0x17	; 23
 236:	60 0f       	add	r22, r16
 238:	c6 01       	movw	r24, r12
 23a:	4d df       	rcall	.-358    	; 0xd6 <_Z5crc16Phh>
 23c:	89 83       	std	Y+1, r24	; 0x01
 23e:	9a 83       	std	Y+2, r25	; 0x02
 240:	f7 01       	movw	r30, r14
 242:	e1 0f       	add	r30, r17
 244:	f1 1d       	adc	r31, r1
 246:	80 83       	st	Z, r24
 248:	91 83       	std	Z+1, r25	; 0x01
 24a:	06 5e       	subi	r16, 0xE6	; 230
 24c:	f7 01       	movw	r30, r14
 24e:	e0 0f       	add	r30, r16
 250:	f1 1d       	adc	r31, r1
 252:	8e e7       	ldi	r24, 0x7E	; 126
 254:	80 83       	st	Z, r24
 256:	c0 5b       	subi	r28, 0xB0	; 176
 258:	df 4f       	sbci	r29, 0xFF	; 255
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	ff 90       	pop	r15
 26e:	ef 90       	pop	r14
 270:	df 90       	pop	r13
 272:	cf 90       	pop	r12
 274:	08 95       	ret

00000276 <_Z10init_UART0v>:
 276:	1b b8       	out	0x0b, r1	; 11
 278:	1a b8       	out	0x0a, r1	; 10
 27a:	e5 e9       	ldi	r30, 0x95	; 149
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	10 82       	st	Z, r1
 280:	59 9a       	sbi	0x0b, 1	; 11
 282:	8a b1       	in	r24, 0x0a	; 10
 284:	88 61       	ori	r24, 0x18	; 24
 286:	8a b9       	out	0x0a, r24	; 10
 288:	80 81       	ld	r24, Z
 28a:	8e 60       	ori	r24, 0x0E	; 14
 28c:	80 83       	st	Z, r24
 28e:	87 e6       	ldi	r24, 0x67	; 103
 290:	89 b9       	out	0x09, r24	; 9
 292:	10 92 90 00 	sts	0x0090, r1
 296:	08 95       	ret

00000298 <_Z10init_UART1v>:
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	cb e9       	ldi	r28, 0x9B	; 155
 29e:	d0 e0       	ldi	r29, 0x00	; 0
 2a0:	18 82       	st	Y, r1
 2a2:	aa e9       	ldi	r26, 0x9A	; 154
 2a4:	b0 e0       	ldi	r27, 0x00	; 0
 2a6:	1c 92       	st	X, r1
 2a8:	ed e9       	ldi	r30, 0x9D	; 157
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	10 82       	st	Z, r1
 2ae:	88 81       	ld	r24, Y
 2b0:	82 60       	ori	r24, 0x02	; 2
 2b2:	88 83       	st	Y, r24
 2b4:	8c 91       	ld	r24, X
 2b6:	80 61       	ori	r24, 0x10	; 16
 2b8:	8c 93       	st	X, r24
 2ba:	80 81       	ld	r24, Z
 2bc:	8e 60       	ori	r24, 0x0E	; 14
 2be:	80 83       	st	Z, r24
 2c0:	87 e6       	ldi	r24, 0x67	; 103
 2c2:	80 93 99 00 	sts	0x0099, r24
 2c6:	10 92 98 00 	sts	0x0098, r1
 2ca:	df 91       	pop	r29
 2cc:	cf 91       	pop	r28
 2ce:	08 95       	ret

000002d0 <_Z14transmit_UART1c>:
 2d0:	eb e9       	ldi	r30, 0x9B	; 155
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	90 81       	ld	r25, Z
 2d6:	95 ff       	sbrs	r25, 5
 2d8:	fd cf       	rjmp	.-6      	; 0x2d4 <_Z14transmit_UART1c+0x4>
 2da:	80 93 9c 00 	sts	0x009C, r24
 2de:	08 95       	ret

000002e0 <_Z14transmit_UART0c>:
 2e0:	5d 9b       	sbis	0x0b, 5	; 11
 2e2:	fe cf       	rjmp	.-4      	; 0x2e0 <_Z14transmit_UART0c>
 2e4:	8c b9       	out	0x0c, r24	; 12
 2e6:	08 95       	ret

000002e8 <_Z22eeprom_read_bytes_partmiPh>:
 2e8:	af 92       	push	r10
 2ea:	bf 92       	push	r11
 2ec:	cf 92       	push	r12
 2ee:	df 92       	push	r13
 2f0:	ef 92       	push	r14
 2f2:	ff 92       	push	r15
 2f4:	0f 93       	push	r16
 2f6:	1f 93       	push	r17
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	61 15       	cp	r22, r1
 2fe:	71 05       	cpc	r23, r1
 300:	11 e0       	ldi	r17, 0x01	; 1
 302:	81 07       	cpc	r24, r17
 304:	91 05       	cpc	r25, r1
 306:	38 f0       	brcs	.+14     	; 0x316 <_Z22eeprom_read_bytes_partmiPh+0x2e>
 308:	01 97       	sbiw	r24, 0x01	; 1
 30a:	e0 91 06 01 	lds	r30, 0x0106
 30e:	e8 60       	ori	r30, 0x08	; 8
 310:	e0 93 06 01 	sts	0x0106, r30
 314:	05 c0       	rjmp	.+10     	; 0x320 <_Z22eeprom_read_bytes_partmiPh+0x38>
 316:	e0 91 06 01 	lds	r30, 0x0106
 31a:	e7 7f       	andi	r30, 0xF7	; 247
 31c:	e0 93 06 01 	sts	0x0106, r30
 320:	f0 90 06 01 	lds	r15, 0x0106
 324:	b7 2e       	mov	r11, r23
 326:	0f 2e       	mov	r0, r31
 328:	f8 ec       	ldi	r31, 0xC8	; 200
 32a:	cf 2e       	mov	r12, r31
 32c:	f0 2d       	mov	r31, r0
 32e:	e4 e7       	ldi	r30, 0x74	; 116
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	0f 2e       	mov	r0, r31
 334:	f4 ea       	ldi	r31, 0xA4	; 164
 336:	df 2e       	mov	r13, r31
 338:	f0 2d       	mov	r31, r0
 33a:	a1 e7       	ldi	r26, 0x71	; 113
 33c:	b0 e0       	ldi	r27, 0x00	; 0
 33e:	0d 2d       	mov	r16, r13
 340:	c3 e7       	ldi	r28, 0x73	; 115
 342:	d0 e0       	ldi	r29, 0x00	; 0
 344:	1f 2d       	mov	r17, r15
 346:	11 60       	ori	r17, 0x01	; 1
 348:	a1 2e       	mov	r10, r17
 34a:	03 c0       	rjmp	.+6      	; 0x352 <_Z22eeprom_read_bytes_partmiPh+0x6a>
 34c:	ca 94       	dec	r12
 34e:	09 f4       	brne	.+2      	; 0x352 <_Z22eeprom_read_bytes_partmiPh+0x6a>
 350:	ba c0       	rjmp	.+372    	; 0x4c6 <_Z22eeprom_read_bytes_partmiPh+0x1de>
 352:	0f 2e       	mov	r0, r31
 354:	f4 e8       	ldi	r31, 0x84	; 132
 356:	ef 2e       	mov	r14, r31
 358:	f0 2d       	mov	r31, r0
 35a:	00 83       	st	Z, r16
 35c:	10 81       	ld	r17, Z
 35e:	11 23       	and	r17, r17
 360:	ec f7       	brge	.-6      	; 0x35c <_Z22eeprom_read_bytes_partmiPh+0x74>
 362:	1c 91       	ld	r17, X
 364:	18 7f       	andi	r17, 0xF8	; 248
 366:	10 93 47 01 	sts	0x0147, r17
 36a:	10 31       	cpi	r17, 0x10	; 16
 36c:	29 f0       	breq	.+10     	; 0x378 <_Z22eeprom_read_bytes_partmiPh+0x90>
 36e:	18 33       	cpi	r17, 0x38	; 56
 370:	a1 f3       	breq	.-24     	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 372:	18 30       	cpi	r17, 0x08	; 8
 374:	09 f0       	breq	.+2      	; 0x378 <_Z22eeprom_read_bytes_partmiPh+0x90>
 376:	aa c0       	rjmp	.+340    	; 0x4cc <_Z22eeprom_read_bytes_partmiPh+0x1e4>
 378:	f8 82       	st	Y, r15
 37a:	e0 82       	st	Z, r14
 37c:	10 81       	ld	r17, Z
 37e:	11 23       	and	r17, r17
 380:	ec f7       	brge	.-6      	; 0x37c <_Z22eeprom_read_bytes_partmiPh+0x94>
 382:	1c 91       	ld	r17, X
 384:	18 7f       	andi	r17, 0xF8	; 248
 386:	10 93 47 01 	sts	0x0147, r17
 38a:	10 32       	cpi	r17, 0x20	; 32
 38c:	f9 f2       	breq	.-66     	; 0x34c <_Z22eeprom_read_bytes_partmiPh+0x64>
 38e:	18 33       	cpi	r17, 0x38	; 56
 390:	21 f3       	breq	.-56     	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 392:	18 31       	cpi	r17, 0x18	; 24
 394:	09 f0       	breq	.+2      	; 0x398 <_Z22eeprom_read_bytes_partmiPh+0xb0>
 396:	7d c0       	rjmp	.+250    	; 0x492 <_Z22eeprom_read_bytes_partmiPh+0x1aa>
 398:	b8 82       	st	Y, r11
 39a:	e0 82       	st	Z, r14
 39c:	10 81       	ld	r17, Z
 39e:	11 23       	and	r17, r17
 3a0:	ec f7       	brge	.-6      	; 0x39c <_Z22eeprom_read_bytes_partmiPh+0xb4>
 3a2:	1c 91       	ld	r17, X
 3a4:	18 7f       	andi	r17, 0xF8	; 248
 3a6:	10 93 47 01 	sts	0x0147, r17
 3aa:	10 33       	cpi	r17, 0x30	; 48
 3ac:	b1 f2       	breq	.-84     	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 3ae:	18 33       	cpi	r17, 0x38	; 56
 3b0:	a1 f2       	breq	.-88     	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 3b2:	18 32       	cpi	r17, 0x28	; 40
 3b4:	09 f0       	breq	.+2      	; 0x3b8 <_Z22eeprom_read_bytes_partmiPh+0xd0>
 3b6:	70 c0       	rjmp	.+224    	; 0x498 <_Z22eeprom_read_bytes_partmiPh+0x1b0>
 3b8:	68 83       	st	Y, r22
 3ba:	e0 82       	st	Z, r14
 3bc:	10 81       	ld	r17, Z
 3be:	11 23       	and	r17, r17
 3c0:	ec f7       	brge	.-6      	; 0x3bc <_Z22eeprom_read_bytes_partmiPh+0xd4>
 3c2:	1c 91       	ld	r17, X
 3c4:	18 7f       	andi	r17, 0xF8	; 248
 3c6:	10 93 47 01 	sts	0x0147, r17
 3ca:	10 33       	cpi	r17, 0x30	; 48
 3cc:	31 f0       	breq	.+12     	; 0x3da <_Z22eeprom_read_bytes_partmiPh+0xf2>
 3ce:	18 33       	cpi	r17, 0x38	; 56
 3d0:	21 f2       	breq	.-120    	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 3d2:	18 32       	cpi	r17, 0x28	; 40
 3d4:	09 f0       	breq	.+2      	; 0x3d8 <_Z22eeprom_read_bytes_partmiPh+0xf0>
 3d6:	63 c0       	rjmp	.+198    	; 0x49e <_Z22eeprom_read_bytes_partmiPh+0x1b6>
 3d8:	03 c0       	rjmp	.+6      	; 0x3e0 <_Z22eeprom_read_bytes_partmiPh+0xf8>
 3da:	20 e0       	ldi	r18, 0x00	; 0
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	6d c0       	rjmp	.+218    	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 3e0:	d0 82       	st	Z, r13
 3e2:	10 81       	ld	r17, Z
 3e4:	11 23       	and	r17, r17
 3e6:	ec f7       	brge	.-6      	; 0x3e2 <_Z22eeprom_read_bytes_partmiPh+0xfa>
 3e8:	1c 91       	ld	r17, X
 3ea:	18 7f       	andi	r17, 0xF8	; 248
 3ec:	10 93 47 01 	sts	0x0147, r17
 3f0:	10 31       	cpi	r17, 0x10	; 16
 3f2:	31 f0       	breq	.+12     	; 0x400 <_Z22eeprom_read_bytes_partmiPh+0x118>
 3f4:	18 33       	cpi	r17, 0x38	; 56
 3f6:	09 f4       	brne	.+2      	; 0x3fa <_Z22eeprom_read_bytes_partmiPh+0x112>
 3f8:	b0 cf       	rjmp	.-160    	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 3fa:	18 30       	cpi	r17, 0x08	; 8
 3fc:	09 f0       	breq	.+2      	; 0x400 <_Z22eeprom_read_bytes_partmiPh+0x118>
 3fe:	52 c0       	rjmp	.+164    	; 0x4a4 <_Z22eeprom_read_bytes_partmiPh+0x1bc>
 400:	a8 82       	st	Y, r10
 402:	e0 82       	st	Z, r14
 404:	10 81       	ld	r17, Z
 406:	11 23       	and	r17, r17
 408:	ec f7       	brge	.-6      	; 0x404 <_Z22eeprom_read_bytes_partmiPh+0x11c>
 40a:	1c 91       	ld	r17, X
 40c:	18 7f       	andi	r17, 0xF8	; 248
 40e:	10 93 47 01 	sts	0x0147, r17
 412:	10 34       	cpi	r17, 0x40	; 64
 414:	49 f0       	breq	.+18     	; 0x428 <_Z22eeprom_read_bytes_partmiPh+0x140>
 416:	18 34       	cpi	r17, 0x48	; 72
 418:	21 f0       	breq	.+8      	; 0x422 <_Z22eeprom_read_bytes_partmiPh+0x13a>
 41a:	18 33       	cpi	r17, 0x38	; 56
 41c:	09 f0       	breq	.+2      	; 0x420 <_Z22eeprom_read_bytes_partmiPh+0x138>
 41e:	45 c0       	rjmp	.+138    	; 0x4aa <_Z22eeprom_read_bytes_partmiPh+0x1c2>
 420:	9c cf       	rjmp	.-200    	; 0x35a <_Z22eeprom_read_bytes_partmiPh+0x72>
 422:	20 e0       	ldi	r18, 0x00	; 0
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	49 c0       	rjmp	.+146    	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 428:	14 16       	cp	r1, r20
 42a:	15 06       	cpc	r1, r21
 42c:	0c f0       	brlt	.+2      	; 0x430 <_Z22eeprom_read_bytes_partmiPh+0x148>
 42e:	40 c0       	rjmp	.+128    	; 0x4b0 <_Z22eeprom_read_bytes_partmiPh+0x1c8>
 430:	82 2f       	mov	r24, r18
 432:	93 2f       	mov	r25, r19
 434:	20 e0       	ldi	r18, 0x00	; 0
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	04 ec       	ldi	r16, 0xC4	; 196
 43a:	0f 2e       	mov	r0, r31
 43c:	f4 e8       	ldi	r31, 0x84	; 132
 43e:	ff 2e       	mov	r15, r31
 440:	f0 2d       	mov	r31, r0
 442:	a4 e7       	ldi	r26, 0x74	; 116
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	61 e7       	ldi	r22, 0x71	; 113
 448:	70 e0       	ldi	r23, 0x00	; 0
 44a:	0f 2e       	mov	r0, r31
 44c:	f3 e7       	ldi	r31, 0x73	; 115
 44e:	cf 2e       	mov	r12, r31
 450:	d1 2c       	mov	r13, r1
 452:	f0 2d       	mov	r31, r0
 454:	fc 01       	movw	r30, r24
 456:	41 30       	cpi	r20, 0x01	; 1
 458:	51 05       	cpc	r21, r1
 45a:	09 f4       	brne	.+2      	; 0x45e <_Z22eeprom_read_bytes_partmiPh+0x176>
 45c:	0f 2d       	mov	r16, r15
 45e:	0c 93       	st	X, r16
 460:	1c 91       	ld	r17, X
 462:	11 23       	and	r17, r17
 464:	ec f7       	brge	.-6      	; 0x460 <_Z22eeprom_read_bytes_partmiPh+0x178>
 466:	eb 01       	movw	r28, r22
 468:	18 81       	ld	r17, Y
 46a:	18 7f       	andi	r17, 0xF8	; 248
 46c:	10 93 47 01 	sts	0x0147, r17
 470:	10 35       	cpi	r17, 0x50	; 80
 472:	19 f0       	breq	.+6      	; 0x47a <_Z22eeprom_read_bytes_partmiPh+0x192>
 474:	18 35       	cpi	r17, 0x58	; 88
 476:	69 f1       	breq	.+90     	; 0x4d2 <_Z22eeprom_read_bytes_partmiPh+0x1ea>
 478:	1e c0       	rjmp	.+60     	; 0x4b6 <_Z22eeprom_read_bytes_partmiPh+0x1ce>
 47a:	e6 01       	movw	r28, r12
 47c:	18 81       	ld	r17, Y
 47e:	10 83       	st	Z, r17
 480:	01 96       	adiw	r24, 0x01	; 1
 482:	2f 5f       	subi	r18, 0xFF	; 255
 484:	3f 4f       	sbci	r19, 0xFF	; 255
 486:	41 50       	subi	r20, 0x01	; 1
 488:	51 09       	sbc	r21, r1
 48a:	41 15       	cp	r20, r1
 48c:	51 05       	cpc	r21, r1
 48e:	11 f7       	brne	.-60     	; 0x454 <_Z22eeprom_read_bytes_partmiPh+0x16c>
 490:	14 c0       	rjmp	.+40     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 492:	2f ef       	ldi	r18, 0xFF	; 255
 494:	3f ef       	ldi	r19, 0xFF	; 255
 496:	11 c0       	rjmp	.+34     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 498:	2f ef       	ldi	r18, 0xFF	; 255
 49a:	3f ef       	ldi	r19, 0xFF	; 255
 49c:	0e c0       	rjmp	.+28     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 49e:	2f ef       	ldi	r18, 0xFF	; 255
 4a0:	3f ef       	ldi	r19, 0xFF	; 255
 4a2:	0b c0       	rjmp	.+22     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 4a4:	2f ef       	ldi	r18, 0xFF	; 255
 4a6:	3f ef       	ldi	r19, 0xFF	; 255
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 4aa:	2f ef       	ldi	r18, 0xFF	; 255
 4ac:	3f ef       	ldi	r19, 0xFF	; 255
 4ae:	05 c0       	rjmp	.+10     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 4b0:	20 e0       	ldi	r18, 0x00	; 0
 4b2:	30 e0       	ldi	r19, 0x00	; 0
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 4b6:	2f ef       	ldi	r18, 0xFF	; 255
 4b8:	3f ef       	ldi	r19, 0xFF	; 255
 4ba:	84 e9       	ldi	r24, 0x94	; 148
 4bc:	80 93 74 00 	sts	0x0074, r24
 4c0:	82 2f       	mov	r24, r18
 4c2:	93 2f       	mov	r25, r19
 4c4:	0c c0       	rjmp	.+24     	; 0x4de <_Z22eeprom_read_bytes_partmiPh+0x1f6>
 4c6:	8f ef       	ldi	r24, 0xFF	; 255
 4c8:	9f ef       	ldi	r25, 0xFF	; 255
 4ca:	09 c0       	rjmp	.+18     	; 0x4de <_Z22eeprom_read_bytes_partmiPh+0x1f6>
 4cc:	8f ef       	ldi	r24, 0xFF	; 255
 4ce:	9f ef       	ldi	r25, 0xFF	; 255
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <_Z22eeprom_read_bytes_partmiPh+0x1f6>
 4d2:	80 91 73 00 	lds	r24, 0x0073
 4d6:	80 83       	st	Z, r24
 4d8:	2f 5f       	subi	r18, 0xFF	; 255
 4da:	3f 4f       	sbci	r19, 0xFF	; 255
 4dc:	ee cf       	rjmp	.-36     	; 0x4ba <_Z22eeprom_read_bytes_partmiPh+0x1d2>
 4de:	df 91       	pop	r29
 4e0:	cf 91       	pop	r28
 4e2:	1f 91       	pop	r17
 4e4:	0f 91       	pop	r16
 4e6:	ff 90       	pop	r15
 4e8:	ef 90       	pop	r14
 4ea:	df 90       	pop	r13
 4ec:	cf 90       	pop	r12
 4ee:	bf 90       	pop	r11
 4f0:	af 90       	pop	r10
 4f2:	08 95       	ret

000004f4 <_Z17eeprom_read_bytesmiPh>:
 4f4:	cf 92       	push	r12
 4f6:	df 92       	push	r13
 4f8:	ef 92       	push	r14
 4fa:	ff 92       	push	r15
 4fc:	0f 93       	push	r16
 4fe:	1f 93       	push	r17
 500:	cf 93       	push	r28
 502:	df 93       	push	r29
 504:	ea 01       	movw	r28, r20
 506:	89 01       	movw	r16, r18
 508:	61 15       	cp	r22, r1
 50a:	71 05       	cpc	r23, r1
 50c:	21 e0       	ldi	r18, 0x01	; 1
 50e:	82 07       	cpc	r24, r18
 510:	91 05       	cpc	r25, r1
 512:	10 f5       	brcc	.+68     	; 0x558 <_Z17eeprom_read_bytesmiPh+0x64>
 514:	6a 01       	movw	r12, r20
 516:	ee 24       	eor	r14, r14
 518:	d7 fc       	sbrc	r13, 7
 51a:	e0 94       	com	r14
 51c:	fe 2c       	mov	r15, r14
 51e:	c6 0e       	add	r12, r22
 520:	d7 1e       	adc	r13, r23
 522:	e8 1e       	adc	r14, r24
 524:	f9 1e       	adc	r15, r25
 526:	21 e0       	ldi	r18, 0x01	; 1
 528:	c2 16       	cp	r12, r18
 52a:	d1 04       	cpc	r13, r1
 52c:	e2 06       	cpc	r14, r18
 52e:	f1 04       	cpc	r15, r1
 530:	98 f0       	brcs	.+38     	; 0x558 <_Z17eeprom_read_bytesmiPh+0x64>
 532:	ee 24       	eor	r14, r14
 534:	ff 24       	eor	r15, r15
 536:	e6 1a       	sub	r14, r22
 538:	f7 0a       	sbc	r15, r23
 53a:	98 01       	movw	r18, r16
 53c:	a7 01       	movw	r20, r14
 53e:	d4 de       	rcall	.-600    	; 0x2e8 <_Z22eeprom_read_bytes_partmiPh>
 540:	98 01       	movw	r18, r16
 542:	2e 0d       	add	r18, r14
 544:	3f 1d       	adc	r19, r15
 546:	ae 01       	movw	r20, r28
 548:	4e 19       	sub	r20, r14
 54a:	5f 09       	sbc	r21, r15
 54c:	60 e0       	ldi	r22, 0x00	; 0
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	c9 de       	rcall	.-622    	; 0x2e8 <_Z22eeprom_read_bytes_partmiPh>
 556:	03 c0       	rjmp	.+6      	; 0x55e <_Z17eeprom_read_bytesmiPh+0x6a>
 558:	98 01       	movw	r18, r16
 55a:	ae 01       	movw	r20, r28
 55c:	c5 de       	rcall	.-630    	; 0x2e8 <_Z22eeprom_read_bytes_partmiPh>
 55e:	df 91       	pop	r29
 560:	cf 91       	pop	r28
 562:	1f 91       	pop	r17
 564:	0f 91       	pop	r16
 566:	ff 90       	pop	r15
 568:	ef 90       	pop	r14
 56a:	df 90       	pop	r13
 56c:	cf 90       	pop	r12
 56e:	08 95       	ret

00000570 <_Z17eeprom_write_pagemiPh>:
 570:	af 92       	push	r10
 572:	bf 92       	push	r11
 574:	cf 92       	push	r12
 576:	df 92       	push	r13
 578:	ef 92       	push	r14
 57a:	ff 92       	push	r15
 57c:	0f 93       	push	r16
 57e:	1f 93       	push	r17
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	b2 2e       	mov	r11, r18
 586:	a3 2e       	mov	r10, r19
 588:	61 15       	cp	r22, r1
 58a:	71 05       	cpc	r23, r1
 58c:	21 e0       	ldi	r18, 0x01	; 1
 58e:	82 07       	cpc	r24, r18
 590:	91 05       	cpc	r25, r1
 592:	38 f0       	brcs	.+14     	; 0x5a2 <_Z17eeprom_write_pagemiPh+0x32>
 594:	01 97       	sbiw	r24, 0x01	; 1
 596:	20 91 06 01 	lds	r18, 0x0106
 59a:	28 60       	ori	r18, 0x08	; 8
 59c:	20 93 06 01 	sts	0x0106, r18
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <_Z17eeprom_write_pagemiPh+0x3c>
 5a2:	20 91 06 01 	lds	r18, 0x0106
 5a6:	27 7f       	andi	r18, 0xF7	; 247
 5a8:	20 93 06 01 	sts	0x0106, r18
 5ac:	6a 01       	movw	r12, r20
 5ae:	ee 24       	eor	r14, r14
 5b0:	d7 fc       	sbrc	r13, 7
 5b2:	e0 94       	com	r14
 5b4:	fe 2c       	mov	r15, r14
 5b6:	c6 0e       	add	r12, r22
 5b8:	d7 1e       	adc	r13, r23
 5ba:	e8 1e       	adc	r14, r24
 5bc:	f9 1e       	adc	r15, r25
 5be:	8b 01       	movw	r16, r22
 5c0:	9c 01       	movw	r18, r24
 5c2:	0f 67       	ori	r16, 0x7F	; 127
 5c4:	c0 16       	cp	r12, r16
 5c6:	d1 06       	cpc	r13, r17
 5c8:	e2 06       	cpc	r14, r18
 5ca:	f3 06       	cpc	r15, r19
 5cc:	18 f4       	brcc	.+6      	; 0x5d4 <_Z17eeprom_write_pagemiPh+0x64>
 5ce:	46 0f       	add	r20, r22
 5d0:	57 1f       	adc	r21, r23
 5d2:	04 c0       	rjmp	.+8      	; 0x5dc <_Z17eeprom_write_pagemiPh+0x6c>
 5d4:	ab 01       	movw	r20, r22
 5d6:	4f 67       	ori	r20, 0x7F	; 127
 5d8:	4f 5f       	subi	r20, 0xFF	; 255
 5da:	5f 4f       	sbci	r21, 0xFF	; 255
 5dc:	00 91 06 01 	lds	r16, 0x0106
 5e0:	e7 2e       	mov	r14, r23
 5e2:	0f 2e       	mov	r0, r31
 5e4:	f8 ec       	ldi	r31, 0xC8	; 200
 5e6:	ff 2e       	mov	r15, r31
 5e8:	f0 2d       	mov	r31, r0
 5ea:	e4 e7       	ldi	r30, 0x74	; 116
 5ec:	f0 e0       	ldi	r31, 0x00	; 0
 5ee:	a1 e7       	ldi	r26, 0x71	; 113
 5f0:	b0 e0       	ldi	r27, 0x00	; 0
 5f2:	34 ea       	ldi	r19, 0xA4	; 164
 5f4:	c3 e7       	ldi	r28, 0x73	; 115
 5f6:	d0 e0       	ldi	r29, 0x00	; 0
 5f8:	14 e8       	ldi	r17, 0x84	; 132
 5fa:	03 c0       	rjmp	.+6      	; 0x602 <_Z17eeprom_write_pagemiPh+0x92>
 5fc:	fa 94       	dec	r15
 5fe:	09 f4       	brne	.+2      	; 0x602 <_Z17eeprom_write_pagemiPh+0x92>
 600:	7d c0       	rjmp	.+250    	; 0x6fc <_Z17eeprom_write_pagemiPh+0x18c>
 602:	30 83       	st	Z, r19
 604:	20 81       	ld	r18, Z
 606:	22 23       	and	r18, r18
 608:	ec f7       	brge	.-6      	; 0x604 <_Z17eeprom_write_pagemiPh+0x94>
 60a:	2c 91       	ld	r18, X
 60c:	28 7f       	andi	r18, 0xF8	; 248
 60e:	20 93 47 01 	sts	0x0147, r18
 612:	20 31       	cpi	r18, 0x10	; 16
 614:	29 f0       	breq	.+10     	; 0x620 <_Z17eeprom_write_pagemiPh+0xb0>
 616:	28 33       	cpi	r18, 0x38	; 56
 618:	a1 f3       	breq	.-24     	; 0x602 <_Z17eeprom_write_pagemiPh+0x92>
 61a:	28 30       	cpi	r18, 0x08	; 8
 61c:	09 f0       	breq	.+2      	; 0x620 <_Z17eeprom_write_pagemiPh+0xb0>
 61e:	71 c0       	rjmp	.+226    	; 0x702 <_Z17eeprom_write_pagemiPh+0x192>
 620:	08 83       	st	Y, r16
 622:	10 83       	st	Z, r17
 624:	20 81       	ld	r18, Z
 626:	22 23       	and	r18, r18
 628:	ec f7       	brge	.-6      	; 0x624 <_Z17eeprom_write_pagemiPh+0xb4>
 62a:	2c 91       	ld	r18, X
 62c:	28 7f       	andi	r18, 0xF8	; 248
 62e:	20 93 47 01 	sts	0x0147, r18
 632:	20 32       	cpi	r18, 0x20	; 32
 634:	19 f3       	breq	.-58     	; 0x5fc <_Z17eeprom_write_pagemiPh+0x8c>
 636:	28 33       	cpi	r18, 0x38	; 56
 638:	21 f3       	breq	.-56     	; 0x602 <_Z17eeprom_write_pagemiPh+0x92>
 63a:	28 31       	cpi	r18, 0x18	; 24
 63c:	09 f0       	breq	.+2      	; 0x640 <_Z17eeprom_write_pagemiPh+0xd0>
 63e:	4a c0       	rjmp	.+148    	; 0x6d4 <_Z17eeprom_write_pagemiPh+0x164>
 640:	e8 82       	st	Y, r14
 642:	10 83       	st	Z, r17
 644:	20 81       	ld	r18, Z
 646:	22 23       	and	r18, r18
 648:	ec f7       	brge	.-6      	; 0x644 <_Z17eeprom_write_pagemiPh+0xd4>
 64a:	2c 91       	ld	r18, X
 64c:	28 7f       	andi	r18, 0xF8	; 248
 64e:	20 93 47 01 	sts	0x0147, r18
 652:	20 33       	cpi	r18, 0x30	; 48
 654:	29 f0       	breq	.+10     	; 0x660 <_Z17eeprom_write_pagemiPh+0xf0>
 656:	28 33       	cpi	r18, 0x38	; 56
 658:	a1 f2       	breq	.-88     	; 0x602 <_Z17eeprom_write_pagemiPh+0x92>
 65a:	28 32       	cpi	r18, 0x28	; 40
 65c:	f1 f5       	brne	.+124    	; 0x6da <_Z17eeprom_write_pagemiPh+0x16a>
 65e:	03 c0       	rjmp	.+6      	; 0x666 <_Z17eeprom_write_pagemiPh+0xf6>
 660:	20 e0       	ldi	r18, 0x00	; 0
 662:	30 e0       	ldi	r19, 0x00	; 0
 664:	45 c0       	rjmp	.+138    	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 666:	68 83       	st	Y, r22
 668:	10 83       	st	Z, r17
 66a:	20 81       	ld	r18, Z
 66c:	22 23       	and	r18, r18
 66e:	ec f7       	brge	.-6      	; 0x66a <_Z17eeprom_write_pagemiPh+0xfa>
 670:	2c 91       	ld	r18, X
 672:	28 7f       	andi	r18, 0xF8	; 248
 674:	20 93 47 01 	sts	0x0147, r18
 678:	20 33       	cpi	r18, 0x30	; 48
 67a:	29 f0       	breq	.+10     	; 0x686 <_Z17eeprom_write_pagemiPh+0x116>
 67c:	28 33       	cpi	r18, 0x38	; 56
 67e:	09 f2       	breq	.-126    	; 0x602 <_Z17eeprom_write_pagemiPh+0x92>
 680:	28 32       	cpi	r18, 0x28	; 40
 682:	71 f5       	brne	.+92     	; 0x6e0 <_Z17eeprom_write_pagemiPh+0x170>
 684:	03 c0       	rjmp	.+6      	; 0x68c <_Z17eeprom_write_pagemiPh+0x11c>
 686:	20 e0       	ldi	r18, 0x00	; 0
 688:	30 e0       	ldi	r19, 0x00	; 0
 68a:	32 c0       	rjmp	.+100    	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 68c:	46 1b       	sub	r20, r22
 68e:	57 0b       	sbc	r21, r23
 690:	14 16       	cp	r1, r20
 692:	15 06       	cpc	r1, r21
 694:	44 f5       	brge	.+80     	; 0x6e6 <_Z17eeprom_write_pagemiPh+0x176>
 696:	ab 2d       	mov	r26, r11
 698:	ba 2d       	mov	r27, r10
 69a:	20 e0       	ldi	r18, 0x00	; 0
 69c:	30 e0       	ldi	r19, 0x00	; 0
 69e:	83 e7       	ldi	r24, 0x73	; 115
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	e4 e7       	ldi	r30, 0x74	; 116
 6a4:	f0 e0       	ldi	r31, 0x00	; 0
 6a6:	74 e8       	ldi	r23, 0x84	; 132
 6a8:	01 e7       	ldi	r16, 0x71	; 113
 6aa:	10 e0       	ldi	r17, 0x00	; 0
 6ac:	6d 91       	ld	r22, X+
 6ae:	ec 01       	movw	r28, r24
 6b0:	68 83       	st	Y, r22
 6b2:	70 83       	st	Z, r23
 6b4:	60 81       	ld	r22, Z
 6b6:	66 23       	and	r22, r22
 6b8:	ec f7       	brge	.-6      	; 0x6b4 <_Z17eeprom_write_pagemiPh+0x144>
 6ba:	e8 01       	movw	r28, r16
 6bc:	68 81       	ld	r22, Y
 6be:	68 7f       	andi	r22, 0xF8	; 248
 6c0:	60 93 47 01 	sts	0x0147, r22
 6c4:	68 32       	cpi	r22, 0x28	; 40
 6c6:	91 f4       	brne	.+36     	; 0x6ec <_Z17eeprom_write_pagemiPh+0x17c>
 6c8:	2f 5f       	subi	r18, 0xFF	; 255
 6ca:	3f 4f       	sbci	r19, 0xFF	; 255
 6cc:	42 17       	cp	r20, r18
 6ce:	53 07       	cpc	r21, r19
 6d0:	69 f7       	brne	.-38     	; 0x6ac <_Z17eeprom_write_pagemiPh+0x13c>
 6d2:	0e c0       	rjmp	.+28     	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 6d4:	2f ef       	ldi	r18, 0xFF	; 255
 6d6:	3f ef       	ldi	r19, 0xFF	; 255
 6d8:	0b c0       	rjmp	.+22     	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 6da:	2f ef       	ldi	r18, 0xFF	; 255
 6dc:	3f ef       	ldi	r19, 0xFF	; 255
 6de:	08 c0       	rjmp	.+16     	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 6e0:	2f ef       	ldi	r18, 0xFF	; 255
 6e2:	3f ef       	ldi	r19, 0xFF	; 255
 6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 6e6:	20 e0       	ldi	r18, 0x00	; 0
 6e8:	30 e0       	ldi	r19, 0x00	; 0
 6ea:	02 c0       	rjmp	.+4      	; 0x6f0 <_Z17eeprom_write_pagemiPh+0x180>
 6ec:	2f ef       	ldi	r18, 0xFF	; 255
 6ee:	3f ef       	ldi	r19, 0xFF	; 255
 6f0:	84 e9       	ldi	r24, 0x94	; 148
 6f2:	80 93 74 00 	sts	0x0074, r24
 6f6:	82 2f       	mov	r24, r18
 6f8:	93 2f       	mov	r25, r19
 6fa:	05 c0       	rjmp	.+10     	; 0x706 <_Z17eeprom_write_pagemiPh+0x196>
 6fc:	8f ef       	ldi	r24, 0xFF	; 255
 6fe:	9f ef       	ldi	r25, 0xFF	; 255
 700:	02 c0       	rjmp	.+4      	; 0x706 <_Z17eeprom_write_pagemiPh+0x196>
 702:	8f ef       	ldi	r24, 0xFF	; 255
 704:	9f ef       	ldi	r25, 0xFF	; 255
 706:	df 91       	pop	r29
 708:	cf 91       	pop	r28
 70a:	1f 91       	pop	r17
 70c:	0f 91       	pop	r16
 70e:	ff 90       	pop	r15
 710:	ef 90       	pop	r14
 712:	df 90       	pop	r13
 714:	cf 90       	pop	r12
 716:	bf 90       	pop	r11
 718:	af 90       	pop	r10
 71a:	08 95       	ret

0000071c <_Z18eeprom_write_bytesmiPh>:
 71c:	af 92       	push	r10
 71e:	bf 92       	push	r11
 720:	cf 92       	push	r12
 722:	df 92       	push	r13
 724:	ef 92       	push	r14
 726:	ff 92       	push	r15
 728:	0f 93       	push	r16
 72a:	1f 93       	push	r17
 72c:	cf 93       	push	r28
 72e:	df 93       	push	r29
 730:	6b 01       	movw	r12, r22
 732:	7c 01       	movw	r14, r24
 734:	ea 01       	movw	r28, r20
 736:	89 01       	movw	r16, r18
 738:	a1 2c       	mov	r10, r1
 73a:	b1 2c       	mov	r11, r1
 73c:	98 01       	movw	r18, r16
 73e:	ae 01       	movw	r20, r28
 740:	c7 01       	movw	r24, r14
 742:	b6 01       	movw	r22, r12
 744:	15 df       	rcall	.-470    	; 0x570 <_Z17eeprom_write_pagemiPh>
 746:	8f 3f       	cpi	r24, 0xFF	; 255
 748:	2f ef       	ldi	r18, 0xFF	; 255
 74a:	92 07       	cpc	r25, r18
 74c:	99 f0       	breq	.+38     	; 0x774 <_Z18eeprom_write_bytesmiPh+0x58>
 74e:	ac 01       	movw	r20, r24
 750:	66 27       	eor	r22, r22
 752:	57 fd       	sbrc	r21, 7
 754:	60 95       	com	r22
 756:	76 2f       	mov	r23, r22
 758:	c4 0e       	add	r12, r20
 75a:	d5 1e       	adc	r13, r21
 75c:	e6 1e       	adc	r14, r22
 75e:	f7 1e       	adc	r15, r23
 760:	c8 1b       	sub	r28, r24
 762:	d9 0b       	sbc	r29, r25
 764:	08 0f       	add	r16, r24
 766:	19 1f       	adc	r17, r25
 768:	a8 0e       	add	r10, r24
 76a:	b9 1e       	adc	r11, r25
 76c:	1c 16       	cp	r1, r28
 76e:	1d 06       	cpc	r1, r29
 770:	2c f3       	brlt	.-54     	; 0x73c <_Z18eeprom_write_bytesmiPh+0x20>
 772:	03 c0       	rjmp	.+6      	; 0x77a <_Z18eeprom_write_bytesmiPh+0x5e>
 774:	8f ef       	ldi	r24, 0xFF	; 255
 776:	9f ef       	ldi	r25, 0xFF	; 255
 778:	02 c0       	rjmp	.+4      	; 0x77e <_Z18eeprom_write_bytesmiPh+0x62>
 77a:	8a 2d       	mov	r24, r10
 77c:	9b 2d       	mov	r25, r11
 77e:	df 91       	pop	r29
 780:	cf 91       	pop	r28
 782:	1f 91       	pop	r17
 784:	0f 91       	pop	r16
 786:	ff 90       	pop	r15
 788:	ef 90       	pop	r14
 78a:	df 90       	pop	r13
 78c:	cf 90       	pop	r12
 78e:	bf 90       	pop	r11
 790:	af 90       	pop	r10
 792:	08 95       	ret

00000794 <_Z11ADC_Converti>:
}


uint8_t ADC_Convert( int channel)// ADC Initialization and Conversion combined in one function. Channel in switch case corresponds to the HM_Data number. See the assigned numbers on top
{
	switch(channel)
 794:	81 30       	cpi	r24, 0x01	; 1
 796:	91 05       	cpc	r25, r1
 798:	c1 f0       	breq	.+48     	; 0x7ca <_Z11ADC_Converti+0x36>
 79a:	1c f4       	brge	.+6      	; 0x7a2 <_Z11ADC_Converti+0xe>
 79c:	89 2b       	or	r24, r25
 79e:	39 f0       	breq	.+14     	; 0x7ae <_Z11ADC_Converti+0x1a>
 7a0:	3e c0       	rjmp	.+124    	; 0x81e <_Z11ADC_Converti+0x8a>
 7a2:	82 30       	cpi	r24, 0x02	; 2
 7a4:	91 05       	cpc	r25, r1
 7a6:	f9 f0       	breq	.+62     	; 0x7e6 <_Z11ADC_Converti+0x52>
 7a8:	03 97       	sbiw	r24, 0x03	; 3
 7aa:	59 f1       	breq	.+86     	; 0x802 <_Z11ADC_Converti+0x6e>
 7ac:	38 c0       	rjmp	.+112    	; 0x81e <_Z11ADC_Converti+0x8a>
	{
		case 0: ADMUX = 0x60; // v1- Battery Voltage by 3
 7ae:	80 e6       	ldi	r24, 0x60	; 96
 7b0:	87 b9       	out	0x07, r24	; 7
		ADCSRA = 0xC5;
 7b2:	85 ec       	ldi	r24, 0xC5	; 197
 7b4:	86 b9       	out	0x06, r24	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7b6:	8f e1       	ldi	r24, 0x1F	; 31
 7b8:	9e e4       	ldi	r25, 0x4E	; 78
 7ba:	01 97       	sbiw	r24, 0x01	; 1
 7bc:	f1 f7       	brne	.-4      	; 0x7ba <_Z11ADC_Converti+0x26>
 7be:	00 c0       	rjmp	.+0      	; 0x7c0 <_Z11ADC_Converti+0x2c>
 7c0:	00 00       	nop
		_delay_ms(10);
		while (ADCSRA & (1<<ADSC));
 7c2:	36 99       	sbic	0x06, 6	; 6
 7c4:	fe cf       	rjmp	.-4      	; 0x7c2 <_Z11ADC_Converti+0x2e>
		return ADCH;
 7c6:	85 b1       	in	r24, 0x05	; 5
 7c8:	08 95       	ret
		break;
		
		case 1:	ADMUX = 0x61;//v3 - OBC Voltage by 2
 7ca:	81 e6       	ldi	r24, 0x61	; 97
 7cc:	87 b9       	out	0x07, r24	; 7
		ADCSRA = 0xC5;
 7ce:	85 ec       	ldi	r24, 0xC5	; 197
 7d0:	86 b9       	out	0x06, r24	; 6
 7d2:	8f e1       	ldi	r24, 0x1F	; 31
 7d4:	9e e4       	ldi	r25, 0x4E	; 78
 7d6:	01 97       	sbiw	r24, 0x01	; 1
 7d8:	f1 f7       	brne	.-4      	; 0x7d6 <_Z11ADC_Converti+0x42>
 7da:	00 c0       	rjmp	.+0      	; 0x7dc <_Z11ADC_Converti+0x48>
 7dc:	00 00       	nop
		_delay_ms(10);
		while (ADCSRA & (1<<ADSC));
 7de:	36 99       	sbic	0x06, 6	; 6
 7e0:	fe cf       	rjmp	.-4      	; 0x7de <_Z11ADC_Converti+0x4a>
		return ADCH;
 7e2:	85 b1       	in	r24, 0x05	; 5
 7e4:	08 95       	ret
		break;
		
		case 2: ADMUX = 0x62;//v2 - Downlink voltage by 2
 7e6:	82 e6       	ldi	r24, 0x62	; 98
 7e8:	87 b9       	out	0x07, r24	; 7
		ADCSRA = 0xC5;
 7ea:	85 ec       	ldi	r24, 0xC5	; 197
 7ec:	86 b9       	out	0x06, r24	; 6
 7ee:	8f e1       	ldi	r24, 0x1F	; 31
 7f0:	9e e4       	ldi	r25, 0x4E	; 78
 7f2:	01 97       	sbiw	r24, 0x01	; 1
 7f4:	f1 f7       	brne	.-4      	; 0x7f2 <_Z11ADC_Converti+0x5e>
 7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <_Z11ADC_Converti+0x64>
 7f8:	00 00       	nop
		_delay_ms(10);
		while (ADCSRA & (1<<ADSC));
 7fa:	36 99       	sbic	0x06, 6	; 6
 7fc:	fe cf       	rjmp	.-4      	; 0x7fa <_Z11ADC_Converti+0x66>
		return ADCH;
 7fe:	85 b1       	in	r24, 0x05	; 5
 800:	08 95       	ret
		break;
		
		case 3: ADMUX = 0x63;//i1 - Panel current
 802:	83 e6       	ldi	r24, 0x63	; 99
 804:	87 b9       	out	0x07, r24	; 7
		ADCSRA = 0xC5;
 806:	85 ec       	ldi	r24, 0xC5	; 197
 808:	86 b9       	out	0x06, r24	; 6
 80a:	8f e1       	ldi	r24, 0x1F	; 31
 80c:	9e e4       	ldi	r25, 0x4E	; 78
 80e:	01 97       	sbiw	r24, 0x01	; 1
 810:	f1 f7       	brne	.-4      	; 0x80e <_Z11ADC_Converti+0x7a>
 812:	00 c0       	rjmp	.+0      	; 0x814 <_Z11ADC_Converti+0x80>
 814:	00 00       	nop
		_delay_ms(10);
		while (ADCSRA & (1<<ADSC));
 816:	36 99       	sbic	0x06, 6	; 6
 818:	fe cf       	rjmp	.-4      	; 0x816 <_Z11ADC_Converti+0x82>
		return ADCH;
 81a:	85 b1       	in	r24, 0x05	; 5
 81c:	08 95       	ret
		break;
	}
}
 81e:	08 95       	ret

00000820 <_Z21write_frame_to_eepromPhi>:




void write_frame_to_eeprom(uint8_t *frame, int size)
{
 820:	cf 92       	push	r12
 822:	df 92       	push	r13
 824:	ef 92       	push	r14
 826:	ff 92       	push	r15
 828:	cf 93       	push	r28
 82a:	df 93       	push	r29
 82c:	eb 01       	movw	r28, r22
  static uint8_t start = 0;
  
  //if((write_addr == read_addr) && start)
    //read_addr += FRAME_SIZE;
    
  eeprom_write_bytes(write_addr, size,frame); //FRAME_SIZE replaced by 8
 82e:	c0 90 25 01 	lds	r12, 0x0125
 832:	d0 90 26 01 	lds	r13, 0x0126
 836:	e0 90 27 01 	lds	r14, 0x0127
 83a:	f0 90 28 01 	lds	r15, 0x0128
 83e:	9c 01       	movw	r18, r24
 840:	ab 01       	movw	r20, r22
 842:	c7 01       	movw	r24, r14
 844:	b6 01       	movw	r22, r12
 846:	6a df       	rcall	.-300    	; 0x71c <_Z18eeprom_write_bytesmiPh>
  write_addr += size;
 848:	ae 01       	movw	r20, r28
 84a:	66 27       	eor	r22, r22
 84c:	57 fd       	sbrc	r21, 7
 84e:	60 95       	com	r22
 850:	76 2f       	mov	r23, r22
 852:	c4 0e       	add	r12, r20
 854:	d5 1e       	adc	r13, r21
 856:	e6 1e       	adc	r14, r22
 858:	f7 1e       	adc	r15, r23
  
  if(write_addr + size > MAX_ADDR)
 85a:	4c 0d       	add	r20, r12
 85c:	5d 1d       	adc	r21, r13
 85e:	6e 1d       	adc	r22, r14
 860:	7f 1d       	adc	r23, r15
 862:	41 30       	cpi	r20, 0x01	; 1
 864:	51 05       	cpc	r21, r1
 866:	62 40       	sbci	r22, 0x02	; 2
 868:	71 05       	cpc	r23, r1
 86a:	48 f4       	brcc	.+18     	; 0x87e <_Z21write_frame_to_eepromPhi+0x5e>
  
  //if((write_addr == read_addr) && start)
    //read_addr += FRAME_SIZE;
    
  eeprom_write_bytes(write_addr, size,frame); //FRAME_SIZE replaced by 8
  write_addr += size;
 86c:	c0 92 25 01 	sts	0x0125, r12
 870:	d0 92 26 01 	sts	0x0126, r13
 874:	e0 92 27 01 	sts	0x0127, r14
 878:	f0 92 28 01 	sts	0x0128, r15
 87c:	08 c0       	rjmp	.+16     	; 0x88e <_Z21write_frame_to_eepromPhi+0x6e>
  
  if(write_addr + size > MAX_ADDR)
    write_addr = 0;
 87e:	10 92 25 01 	sts	0x0125, r1
 882:	10 92 26 01 	sts	0x0126, r1
 886:	10 92 27 01 	sts	0x0127, r1
 88a:	10 92 28 01 	sts	0x0128, r1
  
  start = 1;
 88e:	81 e0       	ldi	r24, 0x01	; 1
 890:	80 93 1e 01 	sts	0x011E, r24
}
 894:	df 91       	pop	r29
 896:	cf 91       	pop	r28
 898:	ff 90       	pop	r15
 89a:	ef 90       	pop	r14
 89c:	df 90       	pop	r13
 89e:	cf 90       	pop	r12
 8a0:	08 95       	ret

000008a2 <_Z22read_frame_from_eepromPh>:

void read_frame_from_eeprom(uint8_t *frame)
{
 8a2:	cf 92       	push	r12
 8a4:	df 92       	push	r13
 8a6:	ef 92       	push	r14
 8a8:	ff 92       	push	r15
  eeprom_read_bytes(read_addr, Datasize2, frame); //FRAME_SIZE replaced by 40
 8aa:	c0 90 29 01 	lds	r12, 0x0129
 8ae:	d0 90 2a 01 	lds	r13, 0x012A
 8b2:	e0 90 2b 01 	lds	r14, 0x012B
 8b6:	f0 90 2c 01 	lds	r15, 0x012C
 8ba:	40 91 00 01 	lds	r20, 0x0100
 8be:	50 91 01 01 	lds	r21, 0x0101
 8c2:	9c 01       	movw	r18, r24
 8c4:	c7 01       	movw	r24, r14
 8c6:	b6 01       	movw	r22, r12
 8c8:	15 de       	rcall	.-982    	; 0x4f4 <_Z17eeprom_read_bytesmiPh>
  read_addr += Datasize2;
 8ca:	80 91 00 01 	lds	r24, 0x0100
 8ce:	90 91 01 01 	lds	r25, 0x0101
 8d2:	aa 27       	eor	r26, r26
 8d4:	97 fd       	sbrc	r25, 7
 8d6:	a0 95       	com	r26
 8d8:	ba 2f       	mov	r27, r26
 8da:	c8 0e       	add	r12, r24
 8dc:	d9 1e       	adc	r13, r25
 8de:	ea 1e       	adc	r14, r26
 8e0:	fb 1e       	adc	r15, r27
  
  if(read_addr + Datasize2 > MAX_ADDR)
 8e2:	8c 0d       	add	r24, r12
 8e4:	9d 1d       	adc	r25, r13
 8e6:	ae 1d       	adc	r26, r14
 8e8:	bf 1d       	adc	r27, r15
 8ea:	01 97       	sbiw	r24, 0x01	; 1
 8ec:	a2 40       	sbci	r26, 0x02	; 2
 8ee:	b1 05       	cpc	r27, r1
 8f0:	48 f4       	brcc	.+18     	; 0x904 <_Z22read_frame_from_eepromPh+0x62>
}

void read_frame_from_eeprom(uint8_t *frame)
{
  eeprom_read_bytes(read_addr, Datasize2, frame); //FRAME_SIZE replaced by 40
  read_addr += Datasize2;
 8f2:	c0 92 29 01 	sts	0x0129, r12
 8f6:	d0 92 2a 01 	sts	0x012A, r13
 8fa:	e0 92 2b 01 	sts	0x012B, r14
 8fe:	f0 92 2c 01 	sts	0x012C, r15
 902:	08 c0       	rjmp	.+16     	; 0x914 <_Z22read_frame_from_eepromPh+0x72>
  
  if(read_addr + Datasize2 > MAX_ADDR)
    read_addr = 0;
 904:	10 92 29 01 	sts	0x0129, r1
 908:	10 92 2a 01 	sts	0x012A, r1
 90c:	10 92 2b 01 	sts	0x012B, r1
 910:	10 92 2c 01 	sts	0x012C, r1
}
 914:	ff 90       	pop	r15
 916:	ef 90       	pop	r14
 918:	df 90       	pop	r13
 91a:	cf 90       	pop	r12
 91c:	08 95       	ret

0000091e <__vector_17>:
/** @brief Main functionP
 *  @todo Complete slave coding
 */

ISR(SPI_STC_vect)
{
 91e:	1f 92       	push	r1
 920:	0f 92       	push	r0
 922:	0f b6       	in	r0, 0x3f	; 63
 924:	0f 92       	push	r0
 926:	11 24       	eor	r1, r1
 928:	0b b6       	in	r0, 0x3b	; 59
 92a:	0f 92       	push	r0
 92c:	2f 93       	push	r18
 92e:	3f 93       	push	r19
 930:	4f 93       	push	r20
 932:	5f 93       	push	r21
 934:	6f 93       	push	r22
 936:	7f 93       	push	r23
 938:	8f 93       	push	r24
 93a:	9f 93       	push	r25
 93c:	af 93       	push	r26
 93e:	bf 93       	push	r27
 940:	cf 93       	push	r28
 942:	ef 93       	push	r30
 944:	ff 93       	push	r31
	uint8_t dummy = SPDR;
 946:	cf b1       	in	r28, 0x0f	; 15
	transmit_UART0(dummy);
 948:	8c 2f       	mov	r24, r28
 94a:	ca dc       	rcall	.-1644   	; 0x2e0 <_Z14transmit_UART0c>
	message[t] = dummy;
 94c:	e0 91 2d 01 	lds	r30, 0x012D
 950:	f0 e0       	ldi	r31, 0x00	; 0
 952:	e5 5c       	subi	r30, 0xC5	; 197
 954:	fe 4f       	sbci	r31, 0xFE	; 254
 956:	c0 83       	st	Z, r28
	if(JustDownlink ==1){JustDownlink=2;}
 958:	80 91 1f 01 	lds	r24, 0x011F
 95c:	90 91 20 01 	lds	r25, 0x0120
 960:	01 97       	sbiw	r24, 0x01	; 1
 962:	31 f4       	brne	.+12     	; 0x970 <__vector_17+0x52>
 964:	82 e0       	ldi	r24, 0x02	; 2
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	90 93 20 01 	sts	0x0120, r25
 96c:	80 93 1f 01 	sts	0x011F, r24
	if((message[0] == 0xF1)&&(message[1] == 0xF1)&&(message[2] == 0xF1))
 970:	80 91 3b 01 	lds	r24, 0x013B
 974:	81 3f       	cpi	r24, 0xF1	; 241
 976:	09 f0       	breq	.+2      	; 0x97a <__vector_17+0x5c>
 978:	69 c0       	rjmp	.+210    	; 0xa4c <__vector_17+0x12e>
 97a:	80 91 3c 01 	lds	r24, 0x013C
 97e:	81 3f       	cpi	r24, 0xF1	; 241
 980:	09 f0       	breq	.+2      	; 0x984 <__vector_17+0x66>
 982:	64 c0       	rjmp	.+200    	; 0xa4c <__vector_17+0x12e>
 984:	80 91 3d 01 	lds	r24, 0x013D
 988:	81 3f       	cpi	r24, 0xF1	; 241
 98a:	09 f0       	breq	.+2      	; 0x98e <__vector_17+0x70>
 98c:	5f c0       	rjmp	.+190    	; 0xa4c <__vector_17+0x12e>
 98e:	43 c0       	rjmp	.+134    	; 0xa16 <__vector_17+0xf8>
		uplink = 0;
		bytesToRead = 12;
		JustDownlink = 1;
		for(int i =0; i<12; i++)
		{
			message[i] = 0;
 990:	fc 01       	movw	r30, r24
 992:	e5 5c       	subi	r30, 0xC5	; 197
 994:	fe 4f       	sbci	r31, 0xFE	; 254
 996:	10 82       	st	Z, r1
		normal = 0;
		downlink = 1;
		uplink = 0;
		bytesToRead = 12;
		JustDownlink = 1;
		for(int i =0; i<12; i++)
 998:	01 96       	adiw	r24, 0x01	; 1
 99a:	8c 30       	cpi	r24, 0x0C	; 12
 99c:	91 05       	cpc	r25, r1
 99e:	c1 f7       	brne	.-16     	; 0x990 <__vector_17+0x72>
		{
			message[i] = 0;
		}
		t = 0;
 9a0:	10 92 2d 01 	sts	0x012D, r1
 9a4:	96 c0       	rjmp	.+300    	; 0xad2 <__vector_17+0x1b4>
	}
	else if((message[0] == 0xE1)&&(message[1] == 0xE1)&&(message[2] == 0xE1))
 9a6:	80 91 3c 01 	lds	r24, 0x013C
 9aa:	81 3e       	cpi	r24, 0xE1	; 225
 9ac:	09 f0       	breq	.+2      	; 0x9b0 <__vector_17+0x92>
 9ae:	68 c0       	rjmp	.+208    	; 0xa80 <__vector_17+0x162>
 9b0:	80 91 3d 01 	lds	r24, 0x013D
 9b4:	81 3e       	cpi	r24, 0xE1	; 225
 9b6:	09 f0       	breq	.+2      	; 0x9ba <__vector_17+0x9c>
 9b8:	63 c0       	rjmp	.+198    	; 0xa80 <__vector_17+0x162>
 9ba:	4d c0       	rjmp	.+154    	; 0xa56 <__vector_17+0x138>
		downlink = 0;
		uplink = 1;
		JustDownlink=0;
		for(int i =0; i<12; i++)
		{
			message[i] = 0;
 9bc:	fc 01       	movw	r30, r24
 9be:	e5 5c       	subi	r30, 0xC5	; 197
 9c0:	fe 4f       	sbci	r31, 0xFE	; 254
 9c2:	10 82       	st	Z, r1
	{
		normal = 0;
		downlink = 0;
		uplink = 1;
		JustDownlink=0;
		for(int i =0; i<12; i++)
 9c4:	01 96       	adiw	r24, 0x01	; 1
 9c6:	8c 30       	cpi	r24, 0x0C	; 12
 9c8:	91 05       	cpc	r25, r1
 9ca:	c1 f7       	brne	.-16     	; 0x9bc <__vector_17+0x9e>
		{
			message[i] = 0;
		}
		t = 0;
 9cc:	10 92 2d 01 	sts	0x012D, r1
 9d0:	80 c0       	rjmp	.+256    	; 0xad2 <__vector_17+0x1b4>
		
	}
	else if((message[0] == 0xD1)&&(message[1] == 0xD1)&&(message[2] == 0xD1))
 9d2:	80 91 3c 01 	lds	r24, 0x013C
 9d6:	81 3d       	cpi	r24, 0xD1	; 209
 9d8:	09 f0       	breq	.+2      	; 0x9dc <__vector_17+0xbe>
 9da:	57 c0       	rjmp	.+174    	; 0xa8a <__vector_17+0x16c>
 9dc:	80 91 3d 01 	lds	r24, 0x013D
 9e0:	81 3d       	cpi	r24, 0xD1	; 209
 9e2:	09 f0       	breq	.+2      	; 0x9e6 <__vector_17+0xc8>
 9e4:	52 c0       	rjmp	.+164    	; 0xa8a <__vector_17+0x16c>
 9e6:	5e c0       	rjmp	.+188    	; 0xaa4 <__vector_17+0x186>
		downlink = 0;
		uplink = 0;
		bytesToRead = 7;
		for(int i =0; i<12; i++)
		{
			message[i] = 0;
 9e8:	fc 01       	movw	r30, r24
 9ea:	e5 5c       	subi	r30, 0xC5	; 197
 9ec:	fe 4f       	sbci	r31, 0xFE	; 254
 9ee:	10 82       	st	Z, r1
	{
		normal = 1;
		downlink = 0;
		uplink = 0;
		bytesToRead = 7;
		for(int i =0; i<12; i++)
 9f0:	01 96       	adiw	r24, 0x01	; 1
 9f2:	8c 30       	cpi	r24, 0x0C	; 12
 9f4:	91 05       	cpc	r25, r1
 9f6:	c1 f7       	brne	.-16     	; 0x9e8 <__vector_17+0xca>
		{
			message[i] = 0;
		}
		t = 0;
 9f8:	10 92 2d 01 	sts	0x012D, r1
 9fc:	6a c0       	rjmp	.+212    	; 0xad2 <__vector_17+0x1b4>
		
	}
	else if( t>=(bytesToRead-1)) {
		//message[t] = dummy;
			t=0;
 9fe:	10 92 2d 01 	sts	0x012D, r1
			end = 1;
 a02:	81 e0       	ldi	r24, 0x01	; 1
 a04:	80 93 2e 01 	sts	0x012E, r24
 a08:	64 c0       	rjmp	.+200    	; 0xad2 <__vector_17+0x1b4>
			 //transmit_UART0('}');
		}else {
			t++;
 a0a:	80 91 2d 01 	lds	r24, 0x012D
 a0e:	8f 5f       	subi	r24, 0xFF	; 255
 a10:	80 93 2d 01 	sts	0x012D, r24
 a14:	5e c0       	rjmp	.+188    	; 0xad2 <__vector_17+0x1b4>
	transmit_UART0(dummy);
	message[t] = dummy;
	if(JustDownlink ==1){JustDownlink=2;}
	if((message[0] == 0xF1)&&(message[1] == 0xF1)&&(message[2] == 0xF1))
	{
		normal = 0;
 a16:	10 92 05 01 	sts	0x0105, r1
 a1a:	10 92 04 01 	sts	0x0104, r1
		downlink = 1;
 a1e:	81 e0       	ldi	r24, 0x01	; 1
 a20:	90 e0       	ldi	r25, 0x00	; 0
 a22:	90 93 24 01 	sts	0x0124, r25
 a26:	80 93 23 01 	sts	0x0123, r24
		uplink = 0;
 a2a:	10 92 22 01 	sts	0x0122, r1
 a2e:	10 92 21 01 	sts	0x0121, r1
		bytesToRead = 12;
 a32:	2c e0       	ldi	r18, 0x0C	; 12
 a34:	30 e0       	ldi	r19, 0x00	; 0
 a36:	30 93 03 01 	sts	0x0103, r19
 a3a:	20 93 02 01 	sts	0x0102, r18
		JustDownlink = 1;
 a3e:	90 93 20 01 	sts	0x0120, r25
 a42:	80 93 1f 01 	sts	0x011F, r24
		for(int i =0; i<12; i++)
 a46:	80 e0       	ldi	r24, 0x00	; 0
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	a2 cf       	rjmp	.-188    	; 0x990 <__vector_17+0x72>
		{
			message[i] = 0;
		}
		t = 0;
	}
	else if((message[0] == 0xE1)&&(message[1] == 0xE1)&&(message[2] == 0xE1))
 a4c:	80 91 3b 01 	lds	r24, 0x013B
 a50:	81 3e       	cpi	r24, 0xE1	; 225
 a52:	b1 f4       	brne	.+44     	; 0xa80 <__vector_17+0x162>
 a54:	a8 cf       	rjmp	.-176    	; 0x9a6 <__vector_17+0x88>
	{
		normal = 0;
 a56:	10 92 05 01 	sts	0x0105, r1
 a5a:	10 92 04 01 	sts	0x0104, r1
		downlink = 0;
 a5e:	10 92 24 01 	sts	0x0124, r1
 a62:	10 92 23 01 	sts	0x0123, r1
		uplink = 1;
 a66:	81 e0       	ldi	r24, 0x01	; 1
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	90 93 22 01 	sts	0x0122, r25
 a6e:	80 93 21 01 	sts	0x0121, r24
		JustDownlink=0;
 a72:	10 92 20 01 	sts	0x0120, r1
 a76:	10 92 1f 01 	sts	0x011F, r1
		for(int i =0; i<12; i++)
 a7a:	80 e0       	ldi	r24, 0x00	; 0
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	9e cf       	rjmp	.-196    	; 0x9bc <__vector_17+0x9e>
			message[i] = 0;
		}
		t = 0;
		
	}
	else if((message[0] == 0xD1)&&(message[1] == 0xD1)&&(message[2] == 0xD1))
 a80:	80 91 3b 01 	lds	r24, 0x013B
 a84:	81 3d       	cpi	r24, 0xD1	; 209
 a86:	09 f4       	brne	.+2      	; 0xa8a <__vector_17+0x16c>
 a88:	a4 cf       	rjmp	.-184    	; 0x9d2 <__vector_17+0xb4>
			message[i] = 0;
		}
		t = 0;
		
	}
	else if( t>=(bytesToRead-1)) {
 a8a:	20 91 2d 01 	lds	r18, 0x012D
 a8e:	80 91 02 01 	lds	r24, 0x0102
 a92:	90 91 03 01 	lds	r25, 0x0103
 a96:	30 e0       	ldi	r19, 0x00	; 0
 a98:	01 97       	sbiw	r24, 0x01	; 1
 a9a:	28 17       	cp	r18, r24
 a9c:	39 07       	cpc	r19, r25
 a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__vector_17+0x184>
 aa0:	b4 cf       	rjmp	.-152    	; 0xa0a <__vector_17+0xec>
 aa2:	ad cf       	rjmp	.-166    	; 0x9fe <__vector_17+0xe0>
		t = 0;
		
	}
	else if((message[0] == 0xD1)&&(message[1] == 0xD1)&&(message[2] == 0xD1))
	{
		normal = 1;
 aa4:	81 e0       	ldi	r24, 0x01	; 1
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	90 93 05 01 	sts	0x0105, r25
 aac:	80 93 04 01 	sts	0x0104, r24
		downlink = 0;
 ab0:	10 92 24 01 	sts	0x0124, r1
 ab4:	10 92 23 01 	sts	0x0123, r1
		uplink = 0;
 ab8:	10 92 22 01 	sts	0x0122, r1
 abc:	10 92 21 01 	sts	0x0121, r1
		bytesToRead = 7;
 ac0:	87 e0       	ldi	r24, 0x07	; 7
 ac2:	90 e0       	ldi	r25, 0x00	; 0
 ac4:	90 93 03 01 	sts	0x0103, r25
 ac8:	80 93 02 01 	sts	0x0102, r24
		for(int i =0; i<12; i++)
 acc:	80 e0       	ldi	r24, 0x00	; 0
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	8b cf       	rjmp	.-234    	; 0x9e8 <__vector_17+0xca>
			process = 1;
		}
		t++;
	}
	*/
}
 ad2:	ff 91       	pop	r31
 ad4:	ef 91       	pop	r30
 ad6:	cf 91       	pop	r28
 ad8:	bf 91       	pop	r27
 ada:	af 91       	pop	r26
 adc:	9f 91       	pop	r25
 ade:	8f 91       	pop	r24
 ae0:	7f 91       	pop	r23
 ae2:	6f 91       	pop	r22
 ae4:	5f 91       	pop	r21
 ae6:	4f 91       	pop	r20
 ae8:	3f 91       	pop	r19
 aea:	2f 91       	pop	r18
 aec:	0f 90       	pop	r0
 aee:	0b be       	out	0x3b, r0	; 59
 af0:	0f 90       	pop	r0
 af2:	0f be       	out	0x3f, r0	; 63
 af4:	0f 90       	pop	r0
 af6:	1f 90       	pop	r1
 af8:	18 95       	reti

00000afa <main>:




int main(void) {
 afa:	cf 93       	push	r28
 afc:	df 93       	push	r29
 afe:	cd b7       	in	r28, 0x3d	; 61
 b00:	de b7       	in	r29, 0x3e	; 62
 b02:	c5 52       	subi	r28, 0x25	; 37
 b04:	d1 40       	sbci	r29, 0x01	; 1
 b06:	0f b6       	in	r0, 0x3f	; 63
 b08:	f8 94       	cli
 b0a:	de bf       	out	0x3e, r29	; 62
 b0c:	0f be       	out	0x3f, r0	; 63
 b0e:	cd bf       	out	0x3d, r28	; 61
	uint8_t transmission = 0, command;
	uint16_t crc, recv_crc;
	char* data;
	DDRA=0x0F;
 b10:	8f e0       	ldi	r24, 0x0F	; 15
 b12:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x0F;
 b14:	8b bb       	out	0x1b, r24	; 27
	DDRF = 0x00;
 b16:	10 92 61 00 	sts	0x0061, r1
	 uint8_t frame[256];
	init_UART0();
 b1a:	ad db       	rcall	.-2214   	; 0x276 <_Z10init_UART0v>
	init_UART1();
 b1c:	bd db       	rcall	.-2182   	; 0x298 <_Z10init_UART1v>
	//transmit_string_UART0("ini");
	//inituart();
	
	///Disable Watchdog Timer
	wdt_disable();
 b1e:	88 e1       	ldi	r24, 0x18	; 24
 b20:	0f b6       	in	r0, 0x3f	; 63
 b22:	f8 94       	cli
 b24:	81 bd       	out	0x21, r24	; 33
 b26:	11 bc       	out	0x21, r1	; 33
 b28:	0f be       	out	0x3f, r0	; 63
	///Enable Global Interrupts
	init_SPI_slave();
 b2a:	ce da       	rcall	.-2660   	; 0xc8 <_Z14init_SPI_slavev>
	//ioinit();
	sei();
 b2c:	78 94       	sei
	///Initialise SPI as slave
	
	char rx_eeprom[Datasize2];
 b2e:	80 91 00 01 	lds	r24, 0x0100
 b32:	90 91 01 01 	lds	r25, 0x0101
 b36:	2d b7       	in	r18, 0x3d	; 61
 b38:	3e b7       	in	r19, 0x3e	; 62
 b3a:	28 1b       	sub	r18, r24
 b3c:	39 0b       	sbc	r19, r25
 b3e:	0f b6       	in	r0, 0x3f	; 63
 b40:	f8 94       	cli
 b42:	3e bf       	out	0x3e, r19	; 62
 b44:	0f be       	out	0x3f, r0	; 63
 b46:	2d bf       	out	0x3d, r18	; 61
 b48:	8d b7       	in	r24, 0x3d	; 61
 b4a:	9e b7       	in	r25, 0x3e	; 62
 b4c:	01 96       	adiw	r24, 0x01	; 1
 b4e:	4c 01       	movw	r8, r24
	char rx[33];
	uint8_t ADC_Result;
	uint8_t Temperature[4];
	PORTA=0x0A;
 b50:	8a e0       	ldi	r24, 0x0A	; 10
 b52:	8b bb       	out	0x1b, r24	; 27
		
		make_ax25_frame_from_data(frame, (uint8_t *)rx);
		
		for(int i =0; i<(27+Datasize2+12); i= i+1)
		{
			UCSR1B |=(1<<TXEN1);
 b54:	0a e9       	ldi	r16, 0x9A	; 154
 b56:	10 e0       	ldi	r17, 0x00	; 0
 b58:	0f 2e       	mov	r0, r31
 b5a:	ff e2       	ldi	r31, 0x2F	; 47
 b5c:	6f 2e       	mov	r6, r31
 b5e:	f1 e0       	ldi	r31, 0x01	; 1
 b60:	7f 2e       	mov	r7, r31
 b62:	f0 2d       	mov	r31, r0
 b64:	aa 24       	eor	r10, r10
 b66:	a3 94       	inc	r10
 b68:	ba 2c       	mov	r11, r10
 b6a:	ac 0e       	add	r10, r28
 b6c:	bd 1e       	adc	r11, r29
 b6e:	92 e2       	ldi	r25, 0x22	; 34
 b70:	a9 0e       	add	r10, r25
 b72:	b1 1c       	adc	r11, r1
	//int counter = 1;		
	while(1)
	{
		
			//transmit_UART0('t');
			ADC_Result = ADC_Convert(0);
 b74:	80 e0       	ldi	r24, 0x00	; 0
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	0d de       	rcall	.-998    	; 0x794 <_Z11ADC_Converti>
			Temperature[0] = ADC_Result;//*3.3/256; Verify this
 b7a:	ce 5d       	subi	r28, 0xDE	; 222
 b7c:	de 4f       	sbci	r29, 0xFE	; 254
 b7e:	88 83       	st	Y, r24
 b80:	c2 52       	subi	r28, 0x22	; 34
 b82:	d1 40       	sbci	r29, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 b84:	e7 ec       	ldi	r30, 0xC7	; 199
 b86:	f0 e0       	ldi	r31, 0x00	; 0
 b88:	31 97       	sbiw	r30, 0x01	; 1
 b8a:	f1 f7       	brne	.-4      	; 0xb88 <main+0x8e>
 b8c:	00 c0       	rjmp	.+0      	; 0xb8e <main+0x94>
 b8e:	00 00       	nop
			_delay_us(100);
		
		    ADC_Result = ADC_Convert(1);
 b90:	81 e0       	ldi	r24, 0x01	; 1
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	ff dd       	rcall	.-1026   	; 0x794 <_Z11ADC_Converti>
			Temperature[1] = ADC_Result;//*3.3/256; Verify this
 b96:	cd 5d       	subi	r28, 0xDD	; 221
 b98:	de 4f       	sbci	r29, 0xFE	; 254
 b9a:	88 83       	st	Y, r24
 b9c:	c3 52       	subi	r28, 0x23	; 35
 b9e:	d1 40       	sbci	r29, 0x01	; 1
 ba0:	87 ec       	ldi	r24, 0xC7	; 199
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	01 97       	sbiw	r24, 0x01	; 1
 ba6:	f1 f7       	brne	.-4      	; 0xba4 <main+0xaa>
 ba8:	00 c0       	rjmp	.+0      	; 0xbaa <main+0xb0>
 baa:	00 00       	nop
			_delay_us(100);
			
			ADC_Result = ADC_Convert(2);
 bac:	82 e0       	ldi	r24, 0x02	; 2
 bae:	90 e0       	ldi	r25, 0x00	; 0
 bb0:	f1 dd       	rcall	.-1054   	; 0x794 <_Z11ADC_Converti>
			Temperature[2] = ADC_Result;//*3.3/256; Verify this
 bb2:	cc 5d       	subi	r28, 0xDC	; 220
 bb4:	de 4f       	sbci	r29, 0xFE	; 254
 bb6:	88 83       	st	Y, r24
 bb8:	c4 52       	subi	r28, 0x24	; 36
 bba:	d1 40       	sbci	r29, 0x01	; 1
 bbc:	e7 ec       	ldi	r30, 0xC7	; 199
 bbe:	f0 e0       	ldi	r31, 0x00	; 0
 bc0:	31 97       	sbiw	r30, 0x01	; 1
 bc2:	f1 f7       	brne	.-4      	; 0xbc0 <main+0xc6>
 bc4:	00 c0       	rjmp	.+0      	; 0xbc6 <main+0xcc>
 bc6:	00 00       	nop
			_delay_us(100);
			
			ADC_Result = ADC_Convert(3);
 bc8:	83 e0       	ldi	r24, 0x03	; 3
 bca:	90 e0       	ldi	r25, 0x00	; 0
 bcc:	e3 dd       	rcall	.-1082   	; 0x794 <_Z11ADC_Converti>
			Temperature[3] = ADC_Result;//*3.3/256; Verify this
 bce:	cb 5d       	subi	r28, 0xDB	; 219
 bd0:	de 4f       	sbci	r29, 0xFE	; 254
 bd2:	88 83       	st	Y, r24
 bd4:	c5 52       	subi	r28, 0x25	; 37
 bd6:	d1 40       	sbci	r29, 0x01	; 1
 bd8:	87 ec       	ldi	r24, 0xC7	; 199
 bda:	90 e0       	ldi	r25, 0x00	; 0
 bdc:	01 97       	sbiw	r24, 0x01	; 1
 bde:	f1 f7       	brne	.-4      	; 0xbdc <main+0xe2>
 be0:	00 c0       	rjmp	.+0      	; 0xbe2 <main+0xe8>
 be2:	00 00       	nop
			_delay_us(100);
			
		if(normal==1) //Normal mode
 be4:	80 91 04 01 	lds	r24, 0x0104
 be8:	90 91 05 01 	lds	r25, 0x0105
 bec:	01 97       	sbiw	r24, 0x01	; 1
 bee:	09 f0       	breq	.+2      	; 0xbf2 <main+0xf8>
 bf0:	4d c0       	rjmp	.+154    	; 0xc8c <main+0x192>
		{	
		if (end == 1) {
 bf2:	80 91 2e 01 	lds	r24, 0x012E
 bf6:	81 30       	cpi	r24, 0x01	; 1
 bf8:	09 f0       	breq	.+2      	; 0xbfc <main+0x102>
 bfa:	bc cf       	rjmp	.-136    	; 0xb74 <main+0x7a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 bfc:	9f ef       	ldi	r25, 0xFF	; 255
 bfe:	e3 ec       	ldi	r30, 0xC3	; 195
 c00:	f9 e0       	ldi	r31, 0x09	; 9
 c02:	91 50       	subi	r25, 0x01	; 1
 c04:	e0 40       	sbci	r30, 0x00	; 0
 c06:	f0 40       	sbci	r31, 0x00	; 0
 c08:	e1 f7       	brne	.-8      	; 0xc02 <main+0x108>
 c0a:	00 c0       	rjmp	.+0      	; 0xc0c <main+0x112>
 c0c:	00 00       	nop
			//transmit_UART0('l');
			//transmit_UART0('m');
			//transmit_string_UART0("normal");	
		//transmit_string_UART0((char *)message);
		_delay_ms(400); 	
		write_frame_to_eeprom((uint8_t*)message, 7);
 c0e:	67 e0       	ldi	r22, 0x07	; 7
 c10:	70 e0       	ldi	r23, 0x00	; 0
 c12:	8b e3       	ldi	r24, 0x3B	; 59
 c14:	91 e0       	ldi	r25, 0x01	; 1
 c16:	04 de       	rcall	.-1016   	; 0x820 <_Z21write_frame_to_eepromPhi>
		write_frame_to_eeprom((uint8_t*)Temperature, 4);
 c18:	64 e0       	ldi	r22, 0x04	; 4
 c1a:	70 e0       	ldi	r23, 0x00	; 0
 c1c:	ce 01       	movw	r24, r28
 c1e:	8e 5d       	subi	r24, 0xDE	; 222
 c20:	9e 4f       	sbci	r25, 0xFE	; 254
 c22:	fe dd       	rcall	.-1028   	; 0x820 <_Z21write_frame_to_eepromPhi>
		transmit_UART0('a');
 c24:	81 e6       	ldi	r24, 0x61	; 97
 c26:	5c db       	rcall	.-2376   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('b');
 c28:	82 e6       	ldi	r24, 0x62	; 98
 c2a:	5a db       	rcall	.-2380   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0(Temperature[0]);//USARTWriteChar(HM_Data[i]);
 c2c:	ce 5d       	subi	r28, 0xDE	; 222
 c2e:	de 4f       	sbci	r29, 0xFE	; 254
 c30:	88 81       	ld	r24, Y
 c32:	c2 52       	subi	r28, 0x22	; 34
 c34:	d1 40       	sbci	r29, 0x01	; 1
 c36:	54 db       	rcall	.-2392   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('c');
 c38:	83 e6       	ldi	r24, 0x63	; 99
 c3a:	52 db       	rcall	.-2396   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('d');
 c3c:	84 e6       	ldi	r24, 0x64	; 100
 c3e:	50 db       	rcall	.-2400   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0(Temperature[1]);//USARTWriteChar(HM_Data[i]);
 c40:	cd 5d       	subi	r28, 0xDD	; 221
 c42:	de 4f       	sbci	r29, 0xFE	; 254
 c44:	88 81       	ld	r24, Y
 c46:	c3 52       	subi	r28, 0x23	; 35
 c48:	d1 40       	sbci	r29, 0x01	; 1
 c4a:	4a db       	rcall	.-2412   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('e');
 c4c:	85 e6       	ldi	r24, 0x65	; 101
 c4e:	48 db       	rcall	.-2416   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('f');
 c50:	86 e6       	ldi	r24, 0x66	; 102
 c52:	46 db       	rcall	.-2420   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0(Temperature[2]);//USARTWriteChar(HM_Data[i]);
 c54:	cc 5d       	subi	r28, 0xDC	; 220
 c56:	de 4f       	sbci	r29, 0xFE	; 254
 c58:	88 81       	ld	r24, Y
 c5a:	c4 52       	subi	r28, 0x24	; 36
 c5c:	d1 40       	sbci	r29, 0x01	; 1
 c5e:	40 db       	rcall	.-2432   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('g');
 c60:	87 e6       	ldi	r24, 0x67	; 103
 c62:	3e db       	rcall	.-2436   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0('h');
 c64:	88 e6       	ldi	r24, 0x68	; 104
 c66:	3c db       	rcall	.-2440   	; 0x2e0 <_Z14transmit_UART0c>
		transmit_UART0(Temperature[3]);//USARTWriteChar(HM_Data[i]);
 c68:	cb 5d       	subi	r28, 0xDB	; 219
 c6a:	de 4f       	sbci	r29, 0xFE	; 254
 c6c:	88 81       	ld	r24, Y
 c6e:	c5 52       	subi	r28, 0x25	; 37
 c70:	d1 40       	sbci	r29, 0x01	; 1
 c72:	36 db       	rcall	.-2452   	; 0x2e0 <_Z14transmit_UART0c>
 c74:	2f ef       	ldi	r18, 0xFF	; 255
 c76:	34 e3       	ldi	r19, 0x34	; 52
 c78:	8c e0       	ldi	r24, 0x0C	; 12
 c7a:	21 50       	subi	r18, 0x01	; 1
 c7c:	30 40       	sbci	r19, 0x00	; 0
 c7e:	80 40       	sbci	r24, 0x00	; 0
 c80:	e1 f7       	brne	.-8      	; 0xc7a <main+0x180>
 c82:	00 c0       	rjmp	.+0      	; 0xc84 <main+0x18a>
 c84:	00 00       	nop
		
		_delay_ms(500);
		end = 0;
 c86:	10 92 2e 01 	sts	0x012E, r1
 c8a:	74 cf       	rjmp	.-280    	; 0xb74 <main+0x7a>
		}
		}
		else if(downlink == 1)
 c8c:	80 91 23 01 	lds	r24, 0x0123
 c90:	90 91 24 01 	lds	r25, 0x0124
 c94:	01 97       	sbiw	r24, 0x01	; 1
 c96:	09 f0       	breq	.+2      	; 0xc9a <main+0x1a0>
 c98:	74 c0       	rjmp	.+232    	; 0xd82 <main+0x288>
		{
		//_delay_ms(50);
		while(JustDownlink!=2);	
 c9a:	80 91 1f 01 	lds	r24, 0x011F
 c9e:	90 91 20 01 	lds	r25, 0x0120
 ca2:	02 97       	sbiw	r24, 0x02	; 2
 ca4:	d1 f7       	brne	.-12     	; 0xc9a <main+0x1a0>
		if(end==1){
 ca6:	80 91 2e 01 	lds	r24, 0x012E
 caa:	81 30       	cpi	r24, 0x01	; 1
 cac:	71 f4       	brne	.+28     	; 0xcca <main+0x1d0>
 cae:	f3 01       	movw	r30, r6
 cb0:	80 e0       	ldi	r24, 0x00	; 0
 cb2:	90 e0       	ldi	r25, 0x00	; 0
			for(int k = 0; k<12; k++){message1[k] = message[k];}
 cb4:	dc 01       	movw	r26, r24
 cb6:	a5 5c       	subi	r26, 0xC5	; 197
 cb8:	be 4f       	sbci	r27, 0xFE	; 254
 cba:	2c 91       	ld	r18, X
 cbc:	21 93       	st	Z+, r18
 cbe:	01 96       	adiw	r24, 0x01	; 1
 cc0:	8c 30       	cpi	r24, 0x0C	; 12
 cc2:	91 05       	cpc	r25, r1
 cc4:	b9 f7       	brne	.-18     	; 0xcb4 <main+0x1ba>
				end =0;}
 cc6:	10 92 2e 01 	sts	0x012E, r1
			//transmit_string_UART0("Downlink");
		read_frame_from_eeprom((uint8_t*)rx_eeprom);
 cca:	c4 01       	movw	r24, r8
 ccc:	ea dd       	rcall	.-1068   	; 0x8a2 <_Z22read_frame_from_eepromPh>
		//read_frame_from_eeprom((uint8_t*)rx2);
		//rx[8]='\0';
		//_delay_ms(300);
		//transmit_string_UART0((char*)rx);
		for(int j = 0; j<Datasize2; j++)
 cce:	20 91 00 01 	lds	r18, 0x0100
 cd2:	30 91 01 01 	lds	r19, 0x0101
 cd6:	12 16       	cp	r1, r18
 cd8:	13 06       	cpc	r1, r19
 cda:	64 f4       	brge	.+24     	; 0xcf4 <main+0x1fa>
 cdc:	d4 01       	movw	r26, r8
 cde:	fe 01       	movw	r30, r28
 ce0:	ef 5f       	subi	r30, 0xFF	; 255
 ce2:	fe 4f       	sbci	r31, 0xFE	; 254
 ce4:	80 e0       	ldi	r24, 0x00	; 0
 ce6:	90 e0       	ldi	r25, 0x00	; 0
		{
			rx[j] = rx_eeprom[j];
 ce8:	4d 91       	ld	r20, X+
 cea:	41 93       	st	Z+, r20
		read_frame_from_eeprom((uint8_t*)rx_eeprom);
		//read_frame_from_eeprom((uint8_t*)rx2);
		//rx[8]='\0';
		//_delay_ms(300);
		//transmit_string_UART0((char*)rx);
		for(int j = 0; j<Datasize2; j++)
 cec:	01 96       	adiw	r24, 0x01	; 1
 cee:	82 17       	cp	r24, r18
 cf0:	93 07       	cpc	r25, r19
 cf2:	d4 f3       	brlt	.-12     	; 0xce8 <main+0x1ee>
		{
			rx[j] = rx_eeprom[j];
		}
		
		for(int j= Datasize2; j<34; j++)
 cf4:	22 32       	cpi	r18, 0x22	; 34
 cf6:	31 05       	cpc	r19, r1
 cf8:	64 f4       	brge	.+24     	; 0xd12 <main+0x218>
 cfa:	d3 01       	movw	r26, r6
 cfc:	e1 e0       	ldi	r30, 0x01	; 1
 cfe:	f1 e0       	ldi	r31, 0x01	; 1
 d00:	ec 0f       	add	r30, r28
 d02:	fd 1f       	adc	r31, r29
 d04:	e2 0f       	add	r30, r18
 d06:	f3 1f       	adc	r31, r19
		{
			rx[j] = message1[j-Datasize2];
 d08:	8d 91       	ld	r24, X+
 d0a:	81 93       	st	Z+, r24
		for(int j = 0; j<Datasize2; j++)
		{
			rx[j] = rx_eeprom[j];
		}
		
		for(int j= Datasize2; j<34; j++)
 d0c:	ea 15       	cp	r30, r10
 d0e:	fb 05       	cpc	r31, r11
 d10:	d9 f7       	brne	.-10     	; 0xd08 <main+0x20e>
		{
			rx[j] = message1[j-Datasize2];
		}
		
		make_ax25_frame_from_data(frame, (uint8_t *)rx);
 d12:	be 01       	movw	r22, r28
 d14:	6f 5f       	subi	r22, 0xFF	; 255
 d16:	7e 4f       	sbci	r23, 0xFE	; 254
 d18:	ce 01       	movw	r24, r28
 d1a:	01 96       	adiw	r24, 0x01	; 1
 d1c:	06 da       	rcall	.-3060   	; 0x12a <_Z25make_ax25_frame_from_dataPhS_>
		
		for(int i =0; i<(27+Datasize2+12); i= i+1)
 d1e:	80 91 00 01 	lds	r24, 0x0100
 d22:	90 91 01 01 	lds	r25, 0x0101
 d26:	87 96       	adiw	r24, 0x27	; 39
 d28:	18 16       	cp	r1, r24
 d2a:	19 06       	cpc	r1, r25
 d2c:	04 f5       	brge	.+64     	; 0xd6e <main+0x274>
 d2e:	fe 01       	movw	r30, r28
 d30:	31 96       	adiw	r30, 0x01	; 1
 d32:	6f 01       	movw	r12, r30
 d34:	e1 2c       	mov	r14, r1
 d36:	f1 2c       	mov	r15, r1
		{
			UCSR1B |=(1<<TXEN1);
 d38:	f8 01       	movw	r30, r16
 d3a:	80 81       	ld	r24, Z
 d3c:	88 60       	ori	r24, 0x08	; 8
 d3e:	80 83       	st	Z, r24
			transmit_UART1(frame[i]);
 d40:	f6 01       	movw	r30, r12
 d42:	81 91       	ld	r24, Z+
 d44:	6f 01       	movw	r12, r30
 d46:	c4 da       	rcall	.-2680   	; 0x2d0 <_Z14transmit_UART1c>
			UCSR1B &= ~(1<<TXEN1);
 d48:	f8 01       	movw	r30, r16
 d4a:	80 81       	ld	r24, Z
 d4c:	87 7f       	andi	r24, 0xF7	; 247
 d4e:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 d50:	f5 e8       	ldi	r31, 0x85	; 133
 d52:	fa 95       	dec	r31
 d54:	f1 f7       	brne	.-4      	; 0xd52 <main+0x258>
 d56:	00 00       	nop
			rx[j] = message1[j-Datasize2];
		}
		
		make_ax25_frame_from_data(frame, (uint8_t *)rx);
		
		for(int i =0; i<(27+Datasize2+12); i= i+1)
 d58:	2f ef       	ldi	r18, 0xFF	; 255
 d5a:	e2 1a       	sub	r14, r18
 d5c:	f2 0a       	sbc	r15, r18
 d5e:	80 91 00 01 	lds	r24, 0x0100
 d62:	90 91 01 01 	lds	r25, 0x0101
 d66:	87 96       	adiw	r24, 0x27	; 39
 d68:	e8 16       	cp	r14, r24
 d6a:	f9 06       	cpc	r15, r25
 d6c:	2c f3       	brlt	.-54     	; 0xd38 <main+0x23e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 d6e:	3f ef       	ldi	r19, 0xFF	; 255
 d70:	8e e9       	ldi	r24, 0x9E	; 158
 d72:	94 e2       	ldi	r25, 0x24	; 36
 d74:	31 50       	subi	r19, 0x01	; 1
 d76:	80 40       	sbci	r24, 0x00	; 0
 d78:	90 40       	sbci	r25, 0x00	; 0
 d7a:	e1 f7       	brne	.-8      	; 0xd74 <main+0x27a>
 d7c:	00 c0       	rjmp	.+0      	; 0xd7e <main+0x284>
 d7e:	00 00       	nop
 d80:	f9 ce       	rjmp	.-526    	; 0xb74 <main+0x7a>
			_delay_us(50);
		}
		
		_delay_ms(1500);
		}
		else if(uplink == 1){_delay_ms(900);}
 d82:	80 91 21 01 	lds	r24, 0x0121
 d86:	90 91 22 01 	lds	r25, 0x0122
 d8a:	01 97       	sbiw	r24, 0x01	; 1
 d8c:	09 f0       	breq	.+2      	; 0xd90 <main+0x296>
 d8e:	f2 ce       	rjmp	.-540    	; 0xb74 <main+0x7a>
 d90:	ef ef       	ldi	r30, 0xFF	; 255
 d92:	f8 ef       	ldi	r31, 0xF8	; 248
 d94:	25 e1       	ldi	r18, 0x15	; 21
 d96:	e1 50       	subi	r30, 0x01	; 1
 d98:	f0 40       	sbci	r31, 0x00	; 0
 d9a:	20 40       	sbci	r18, 0x00	; 0
 d9c:	e1 f7       	brne	.-8      	; 0xd96 <main+0x29c>
 d9e:	00 c0       	rjmp	.+0      	; 0xda0 <main+0x2a6>
 da0:	00 00       	nop
 da2:	e8 ce       	rjmp	.-560    	; 0xb74 <main+0x7a>

00000da4 <memcpy>:
 da4:	fb 01       	movw	r30, r22
 da6:	dc 01       	movw	r26, r24
 da8:	02 c0       	rjmp	.+4      	; 0xdae <memcpy+0xa>
 daa:	01 90       	ld	r0, Z+
 dac:	0d 92       	st	X+, r0
 dae:	41 50       	subi	r20, 0x01	; 1
 db0:	50 40       	sbci	r21, 0x00	; 0
 db2:	d8 f7       	brcc	.-10     	; 0xdaa <memcpy+0x6>
 db4:	08 95       	ret

00000db6 <_exit>:
 db6:	f8 94       	cli

00000db8 <__stop_program>:
 db8:	ff cf       	rjmp	.-2      	; 0xdb8 <__stop_program>
